//Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created by        :
// generated by      : Agnisys
// generated from    : D:\AgnisysProjects\git_test\Allegro_test\Merger\merg4.idsng
// IDesignSpec rev   : idsbatch v4.16.26.2

//*** This code is generated with following settings ***
// Reg Width                  : 32
// Address Unit               : 8
// C++ Types int              : hwint
// Bus Type                   : AXI
// BigEndian                  : false
// LittleEndian               : false
// Dist. Decode and Readback  : false
//---------------------------------------------------------------------------------------------------------------
/*----------------------------------------------------------------------
Class       : merg45_regnam
-----------------------------------------------------------------------*/

`ifndef CLASS_merg45_regnam
`define CLASS_merg45_regnam
class merg45_regnam extends uvm_reg;
    `uvm_object_utils(merg45_regnam)

    rand uvm_reg_field ff;
    rand uvm_reg_field fxy;
    rand uvm_reg_field fx1;

    // Function : new
    function new(string name = "merg45_regnam");
        super.new(name, 32, build_coverage(UVM_NO_COVERAGE));
        add_coverage(build_coverage(UVM_NO_COVERAGE));            //Added because build coverage in the line above doesn’t work due to a bug in UVM 1.1 library

    endfunction

    // Function : build
    virtual function void build();
        this.ff = uvm_reg_field::type_id::create("ff");

        this.fxy = uvm_reg_field::type_id::create("fxy");

        this.fx1 = uvm_reg_field::type_id::create("fx1");

        this.ff.configure(this, 2,  0, "RW", 0, 'd0, 1, 1, 0);
        this.fxy.configure(this, 1,  4, "RW", 0, 'd0, 1, 1, 0);
        this.fx1.configure(this, 1,  7, "RW", 0, 'd0, 1, 1, 0);

    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class       : merg45_reggroupname_regname2
-----------------------------------------------------------------------*/

`ifndef CLASS_merg45_reggroupname_regname2
`define CLASS_merg45_reggroupname_regname2
class merg45_reggroupname_regname2 extends uvm_reg;
    `uvm_object_utils(merg45_reggroupname_regname2)

    rand uvm_reg_field f12;
    rand uvm_reg_field f1;
    rand uvm_reg_field f13;
    rand uvm_reg_field f11;

    // Function : new
    function new(string name = "merg45_reggroupname_regname2");
        super.new(name, 8, build_coverage(UVM_NO_COVERAGE));
        add_coverage(build_coverage(UVM_NO_COVERAGE));            //Added because build coverage in the line above doesn’t work due to a bug in UVM 1.1 library

    endfunction

    // Function : build
    virtual function void build();
        this.f12 = uvm_reg_field::type_id::create("f12");

        this.f1 = uvm_reg_field::type_id::create("f1");

        this.f13 = uvm_reg_field::type_id::create("f13");

        this.f11 = uvm_reg_field::type_id::create("f11");

        this.f12.configure(this, 2,  3, "RW", 0, 'd0, 1, 1, 0);
        this.f1.configure(this, 2,  1, "RW", 0, 'd1, 1, 1, 0);
        this.f13.configure(this, 1,  6, "RW", 0, 'd0, 1, 1, 0);
        this.f11.configure(this, 1,  7, "RW", 0, 'd1, 1, 1, 0);

    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class       : merg45_reggroupname
-----------------------------------------------------------------------*/
`ifndef CLASS_merg45_reggroupname
`define CLASS_merg45_reggroupname
class merg45_reggroupname extends uvm_reg_file;
    `uvm_object_utils(merg45_reggroupname)

    rand merg45_reggroupname_regname2 regname2;

    // Function : new
    function new(string name = "merg45_reggroupname");
        super.new(name);
    endfunction

    // Function : build
    virtual function void build();
        //create
        regname2   =   merg45_reggroupname_regname2::type_id::create("regname2");

        //config
        regname2.configure(get_block(), this, "regname2");

        //build
        regname2.build();
    endfunction

    virtual function void map(uvm_reg_map mp, uvm_reg_addr_t offset);
        //add reg and regfiles
        mp.add_reg( regname2, offset +  'h0, "RW");
    endfunction

    virtual function void set_offset(uvm_reg_map mp, uvm_reg_addr_t offset);
        regname2.set_offset(mp, offset +  'h0);
    endfunction
endclass
`endif

/*----------------------------------------------------------------------
Class      : merg45_block
-----------------------------------------------------------------------*/
`ifndef CLASS_merg45_block
`define CLASS_merg45_block
class merg45_block extends uvm_reg_block;
    `uvm_object_utils(merg45_block)

    rand merg45_regnam regnam;

    rand merg45_reggroupname reggroupname;

    // Function : new
    function new(string name = "merg45_block");
        super.new(name, UVM_NO_COVERAGE);
    endfunction

    // Function : build
    virtual function void build();
        //REG_NAM
        regnam   =   merg45_regnam::type_id::create("regnam");
        regnam.configure(this, null, "regnam");
        regnam.build();

        //REGGROUP_NAME
        reggroupname   =   merg45_reggroupname::type_id::create("reggroupname");
        reggroupname.configure(this, null, "reggroupname");
        reggroupname.build();

        //define default map and add reg/regfiles
        default_map= create_map("default_map", 'h0, 4, UVM_LITTLE_ENDIAN, 1);
        default_map.add_reg( regnam, 'h0, "RW");
        reggroupname.map( default_map, 'h4);

        regnam.clear_hdl_path();
        regnam.add_hdl_path_slice("regnam_ff_q", 0, 2);
        regnam.add_hdl_path_slice("regnam_fxy_q", 4, 1);
        regnam.add_hdl_path_slice("regnam_fx1_q", 7, 1);
        reggroupname.clear_hdl_path();
        reggroupname.add_hdl_path("");
        reggroupname.regname2.clear_hdl_path();
        reggroupname.regname2.add_hdl_path_slice("reggroupname_regname2_f12_q", 3, 2);
        reggroupname.regname2.add_hdl_path_slice("reggroupname_regname2_f1_q", 1, 2);
        reggroupname.regname2.add_hdl_path_slice("reggroupname_regname2_f13_q", 6, 1);
        reggroupname.regname2.add_hdl_path_slice("reggroupname_regname2_f11_q", 7, 1);

        lock_model();
    endfunction

endclass : merg45_block
`endif
