/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Merger\merg4.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/



#include "Access.h"
#include "merg45Registers.h"

namespace DUOLOG
{
    
    
    /*****************************************************************************/
    
    /**
    *regnam class constructor.
    * This creates an instance of the Register object that is used to represent
    * the regnamregister. In addition, an instance of the Bitfield object is
    * created for each bitfield associated with the regnam register and is then
    * associated with the register object.
    */
    regnam::regnam()
    {
        // Create a new instance of the Bitfield object to represent ff  bitfield
        m_bfff = new Bitfield<U32T> (0, 2, WRITE, READ);
        // Create a new instance of the Bitfield object to represent fxy  bitfield
        m_bffxy = new Bitfield<U32T> (2, 1, WRITE, READ);
        // Create a new instance of the Bitfield object to represent fx1  bitfield
        m_bffx1 = new Bitfield<U32T> (3, 1, WRITE, READ);
        // Declare an array containing pointers to all bitfields associated with the
        // regnam register
        Bitfield<U32T> * bitfields [] = {
        m_bfff,
        m_bffxy,
        m_bffx1
    };
    // Create a new instance of the Register object to represent regnam register
    m_register = new Register<U32T> (32, 0x00000000, 3, bitfields);
}

/**
* Returns pointer to regnam Register object.
* @return Pointer to regnam Register object (Register *).
*/
Register<U32T> * regnam::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the ff Bitfield Object
* @return Pointer to the ff Bitfield Object (Bitfield *).
*/
Bitfield<U32T> * regnam::getff()
{
    return m_bfff;
}


/**
* Returns a pointer to the fxy Bitfield Object
* @return Pointer to the fxy Bitfield Object (Bitfield *).
*/
Bitfield<U32T> * regnam::getfxy()
{
    return m_bffxy;
}


/**
* Returns a pointer to the fx1 Bitfield Object
* @return Pointer to the fx1 Bitfield Object (Bitfield *).
*/
Bitfield<U32T> * regnam::getfx1()
{
    return m_bffx1;
}

/*****************************************************************************/

/**
*regname2 class constructor.
* This creates an instance of the Register object that is used to represent
* the regname2register. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname2 register and is then
* associated with the register object.
*/
regname2::regname2()
{
    // Create a new instance of the Bitfield object to represent f12  bitfield
    m_bff12 = new Bitfield<U8T> (3, 2, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f1  bitfield
    m_bff1 = new Bitfield<U8T> (1, 2, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f13  bitfield
    m_bff13 = new Bitfield<U8T> (6, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f11  bitfield
    m_bff11 = new Bitfield<U8T> (7, 1, WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname2 register
    Bitfield<U8T> * bitfields [] = {
    m_bff12,
    m_bff1,
    m_bff13,
    m_bff11
};
// Create a new instance of the Register object to represent regname2 register
m_register = new Register<U8T> (8, 0x82, 4, bitfields);
}

/**
* Returns pointer to regname2 Register object.
* @return Pointer to regname2 Register object (Register *).
*/
Register<U8T> * regname2::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the f12 Bitfield Object
* @return Pointer to the f12 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf12()
{
    return m_bff12;
}


/**
* Returns a pointer to the f1 Bitfield Object
* @return Pointer to the f1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf1()
{
    return m_bff1;
}


/**
* Returns a pointer to the f13 Bitfield Object
* @return Pointer to the f13 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf13()
{
    return m_bff13;
}


/**
* Returns a pointer to the f11 Bitfield Object
* @return Pointer to the f11 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf11()
{
    return m_bff11;
}

} // namespace DUOLOG
