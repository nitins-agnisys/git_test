/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test26.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/


#ifndef __BKL_H
#define __BKL_H

#include "Access.h"
#include "bklRegisters.h"
#include "LocatedRegister.h"

namespace DUOLOG
{
    
    class bkl
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        regname * m_regregname;
        // Pointer to LocatedRegister object representing regname at address 0x000
        LocatedRegister<U8T> * m_locbkl_intfregname;
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Creates register objects
        void createRegisters();
        // Creates memory objects
        void createMemories();
        // Locates registers
        void locateRegisters();
        // Locates memories
        void locateMemories();
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // regname register offset address definition(s)
        static const U8T BKL_INTF_REGNAME_ADDRESS = 0x000;
        
        
        
        
        // bkl transaction port enumerations
        enum transactionPortType {
        bkl_INTF_TRANSACTION_PORT
    };
    // ------------------------------------------------------------------------
    // Public member functions
    // ------------------------------------------------------------------------
    // Class constructor
    bkl();
    // Initialises all registers in the component
    void initialise();
    // Returns a pointer to the regname object representing regname
    regname * getregname();
    // Returns pointer to LocatedRegister object representing regname at address 0x000
    LocatedRegister<U8T> * getbkl_intfregname();
    // Write access function for regname at address 0x000
    void  writebkl_intfregname(U8T  data, U8T dataMask);
    // Write access function for bkl component bkl_intf transaction target
    void  writebkl_intf(  address,  data,  dataMask);
    // Write byte lanes access function for bkl component bkl_intf transaction target
    void  writeByteLanesbkl_intf(  address, U8T BE,  data);
    // Write access function for component
    void  write (transactionPortType transactionPort,   address,  data,  dataMask);
    // Read access function for regname at address 0x000
    U8T readbkl_intfregname();
    // Read access function for bkl component bkl_intf transaction target
    readbkl_intf(  address);
    // Read byte lanes access function for bkl component bkl_intf transaction target
    readByteLanesbkl_intf(  address, U8T BE);
    // Read access function for component
    read(transactionPortType transactionPort,   address);
};

} // namespace DUOLOG
#endif /* __CTT_H */
