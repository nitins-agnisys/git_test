/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test6.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/



#include "Access.h"
#include "blk1Registers.h"

namespace DUOLOG
{
    
    
    /*****************************************************************************/
    
    /**
    *reg1 class constructor.
    * This creates an instance of the Register object that is used to represent
    * the reg1register. In addition, an instance of the Bitfield object is
    * created for each bitfield associated with the reg1 register and is then
    * associated with the register object.
    */
    reg1::reg1()
    {
        // Create a new instance of the Bitfield object to represent fx  bitfield
        m_bffx = new Bitfield<U16T> (0, 4, WRITE, READ);
        // Declare an array containing pointers to all bitfields associated with the
        // reg1 register
        Bitfield<U16T> * bitfields [] = {
        m_bffx
    };
    // Create a new instance of the Register object to represent reg1 register
    m_register = new Register<U16T> (16, 0x0000, 1, bitfields);
}

/**
* Returns pointer to reg1 Register object.
* @return Pointer to reg1 Register object (Register *).
*/
Register<U16T> * reg1::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the fx Bitfield Object
* @return Pointer to the fx Bitfield Object (Bitfield *).
*/
Bitfield<U16T> * reg1::getfx()
{
    return m_bffx;
}

} // namespace DUOLOG
