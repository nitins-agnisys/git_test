/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test26.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/


#ifndef __BLOCKNAME_REGISTERS_H
#define __BLOCKNAME_REGISTERS_H

#include "Access.h"
#include "Bitfield.h"
#include "Register.h"

namespace DUOLOG
{
    
    
    /*****************************************************************************/
    
    /**
    * Reg0 class
    * This class represents the Reg0 register within the blockname IP Block.
    */
    class Reg0
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg0 Register object
        Register<U32T> * m_register;
        // Pointer to magin Bitfield object
        Bitfield<U32T> * m_bf magin ;
        // Pointer to afehptestchop Bitfield object
        Bitfield<U32T> * m_bf afehptestchop ;
        // Pointer to afehallphext Bitfield object
        Bitfield<U32T> * m_bf afehallphext ;
        // Pointer to water Bitfield object
        Bitfield<U32T> * m_bf water ;
        // Pointer to magine Bitfield object
        Bitfield<U32T> * m_bf magine ;
        // Pointer to hptesthalfscale Bitfield object
        Bitfield<U32T> * m_bf hptesthalfscale ;
        // Pointer to halldis Bitfield object
        Bitfield<U32T> * m_bf halldis ;
        // Pointer to afezerocm Bitfield object
        Bitfield<U32T> * m_bf afezerocm ;
        // Pointer to afezero Bitfield object
        Bitfield<U32T> * m_bf afezero ;
        // Pointer to fire Bitfield object
        Bitfield<U32T> * m_bf fire ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg0();
        // Returns pointer to Reg0 Register object
        Register<U32T> * getRegister();
        // Returns pointer to magin Bitfield object
        Bitfield<U32T> * get magin ();
        // Returns pointer to afehptestchop Bitfield object
        Bitfield<U32T> * get afehptestchop ();
        // Returns pointer to afehallphext Bitfield object
        Bitfield<U32T> * get afehallphext ();
        // Returns pointer to water Bitfield object
        Bitfield<U32T> * get water ();
        // Returns pointer to magine Bitfield object
        Bitfield<U32T> * get magine ();
        // Returns pointer to hptesthalfscale Bitfield object
        Bitfield<U32T> * get hptesthalfscale ();
        // Returns pointer to halldis Bitfield object
        Bitfield<U32T> * get halldis ();
        // Returns pointer to afezerocm Bitfield object
        Bitfield<U32T> * get afezerocm ();
        // Returns pointer to afezero Bitfield object
        Bitfield<U32T> * get afezero ();
        // Returns pointer to fire Bitfield object
        Bitfield<U32T> * get fire ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg1 class
    * This class represents the Reg1 register within the blockname IP Block.
    */
    class Reg1
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg1 Register object
        Register<U32T> * m_register;
        // Pointer to tempin Bitfield object
        Bitfield<U32T> * m_bf tempin ;
        // Pointer to refsigmonsel Bitfield object
        Bitfield<U32T> * m_bf refsigmonsel ;
        // Pointer to tempine Bitfield object
        Bitfield<U32T> * m_bf tempine ;
        // Pointer to spdiagsingle Bitfield object
        Bitfield<U32T> * m_bf spdiagsingle ;
        // Pointer to sdmorder2 Bitfield object
        Bitfield<U32T> * m_bf sdmorder2 ;
        // Pointer to refsigmonevalstart Bitfield object
        Bitfield<U32T> * m_bf refsigmonevalstart ;
        // Pointer to byptsentrim Bitfield object
        Bitfield<U32T> * m_bf byptsentrim ;
        // Pointer to byptrimf Bitfield object
        Bitfield<U32T> * m_bf byptrimf ;
        // Pointer to byptrimdiag Bitfield object
        Bitfield<U32T> * m_bf byptrimdiag ;
        // Pointer to byptrimc Bitfield object
        Bitfield<U32T> * m_bf byptrimc ;
        // Pointer to byptcf Bitfield object
        Bitfield<U32T> * m_bf byptcf ;
        // Pointer to byptcdiag Bitfield object
        Bitfield<U32T> * m_bf byptcdiag ;
        // Pointer to byptcc Bitfield object
        Bitfield<U32T> * m_bf byptcc ;
        // Pointer to bypplin Bitfield object
        Bitfield<U32T> * m_bf bypplin ;
        // Pointer to byplin Bitfield object
        Bitfield<U32T> * m_bf byplin ;
        // Pointer to bypdiagfilt Bitfield object
        Bitfield<U32T> * m_bf bypdiagfilt ;
        // Pointer to bypclamp Bitfield object
        Bitfield<U32T> * m_bf bypclamp ;
        // Pointer to bypbwsel Bitfield object
        Bitfield<U32T> * m_bf bypbwsel ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg1();
        // Returns pointer to Reg1 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tempin Bitfield object
        Bitfield<U32T> * get tempin ();
        // Returns pointer to refsigmonsel Bitfield object
        Bitfield<U32T> * get refsigmonsel ();
        // Returns pointer to tempine Bitfield object
        Bitfield<U32T> * get tempine ();
        // Returns pointer to spdiagsingle Bitfield object
        Bitfield<U32T> * get spdiagsingle ();
        // Returns pointer to sdmorder2 Bitfield object
        Bitfield<U32T> * get sdmorder2 ();
        // Returns pointer to refsigmonevalstart Bitfield object
        Bitfield<U32T> * get refsigmonevalstart ();
        // Returns pointer to byptsentrim Bitfield object
        Bitfield<U32T> * get byptsentrim ();
        // Returns pointer to byptrimf Bitfield object
        Bitfield<U32T> * get byptrimf ();
        // Returns pointer to byptrimdiag Bitfield object
        Bitfield<U32T> * get byptrimdiag ();
        // Returns pointer to byptrimc Bitfield object
        Bitfield<U32T> * get byptrimc ();
        // Returns pointer to byptcf Bitfield object
        Bitfield<U32T> * get byptcf ();
        // Returns pointer to byptcdiag Bitfield object
        Bitfield<U32T> * get byptcdiag ();
        // Returns pointer to byptcc Bitfield object
        Bitfield<U32T> * get byptcc ();
        // Returns pointer to bypplin Bitfield object
        Bitfield<U32T> * get bypplin ();
        // Returns pointer to byplin Bitfield object
        Bitfield<U32T> * get byplin ();
        // Returns pointer to bypdiagfilt Bitfield object
        Bitfield<U32T> * get bypdiagfilt ();
        // Returns pointer to bypclamp Bitfield object
        Bitfield<U32T> * get bypclamp ();
        // Returns pointer to bypbwsel Bitfield object
        Bitfield<U32T> * get bypbwsel ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg2 class
    * This class represents the Reg2 register within the blockname IP Block.
    */
    class Reg2
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg2 Register object
        Register<U32T> * m_register;
        // Pointer to lintbinhyst Bitfield object
        Bitfield<U32T> * m_bf lintbinhyst ;
        // Pointer to hptestlvl Bitfield object
        Bitfield<U32T> * m_bf hptestlvl ;
        // Pointer to hallisel Bitfield object
        Bitfield<U32T> * m_bf hallisel ;
        // Pointer to bwsel Bitfield object
        Bitfield<U32T> * m_bf bwsel ;
        // Pointer to afehpdrvchop Bitfield object
        Bitfield<U32T> * m_bf afehpdrvchop ;
        // Pointer to afegain Bitfield object
        Bitfield<U32T> * m_bf afegain ;
        // Pointer to afeadcchp Bitfield object
        Bitfield<U32T> * m_bf afeadcchp ;
        // Pointer to lintbine Bitfield object
        Bitfield<U32T> * m_bf lintbine ;
        // Pointer to linscalar Bitfield object
        Bitfield<U32T> * m_bf linscalar ;
        // Pointer to bgadcreferrmax Bitfield object
        Bitfield<U32T> * m_bf bgadcreferrmax ;
        // Pointer to asilftt Bitfield object
        Bitfield<U32T> * m_bf asilftt ;
        // Pointer to afezeroconfig Bitfield object
        Bitfield<U32T> * m_bf afezeroconfig ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg2();
        // Returns pointer to Reg2 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lintbinhyst Bitfield object
        Bitfield<U32T> * get lintbinhyst ();
        // Returns pointer to hptestlvl Bitfield object
        Bitfield<U32T> * get hptestlvl ();
        // Returns pointer to hallisel Bitfield object
        Bitfield<U32T> * get hallisel ();
        // Returns pointer to bwsel Bitfield object
        Bitfield<U32T> * get bwsel ();
        // Returns pointer to afehpdrvchop Bitfield object
        Bitfield<U32T> * get afehpdrvchop ();
        // Returns pointer to afegain Bitfield object
        Bitfield<U32T> * get afegain ();
        // Returns pointer to afeadcchp Bitfield object
        Bitfield<U32T> * get afeadcchp ();
        // Returns pointer to lintbine Bitfield object
        Bitfield<U32T> * get lintbine ();
        // Returns pointer to linscalar Bitfield object
        Bitfield<U32T> * get linscalar ();
        // Returns pointer to bgadcreferrmax Bitfield object
        Bitfield<U32T> * get bgadcreferrmax ();
        // Returns pointer to asilftt Bitfield object
        Bitfield<U32T> * get asilftt ();
        // Returns pointer to afezeroconfig Bitfield object
        Bitfield<U32T> * get afezeroconfig ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg3 class
    * This class represents the Reg3 register within the blockname IP Block.
    */
    class Reg3
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg3 Register object
        Register<U32T> * m_register;
        // Pointer to lint01 Bitfield object
        Bitfield<U32T> * m_bf lint01 ;
        // Pointer to lint00 Bitfield object
        Bitfield<U32T> * m_bf lint00 ;
        // Pointer to polf Bitfield object
        Bitfield<U32T> * m_bf polf ;
        // Pointer to poldiag Bitfield object
        Bitfield<U32T> * m_bf poldiag ;
        // Pointer to polc Bitfield object
        Bitfield<U32T> * m_bf polc ;
        // Pointer to lintoutinv Bitfield object
        Bitfield<U32T> * m_bf lintoutinv ;
        // Pointer to lintininv Bitfield object
        Bitfield<U32T> * m_bf lintininv ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg3();
        // Returns pointer to Reg3 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint01 Bitfield object
        Bitfield<U32T> * get lint01 ();
        // Returns pointer to lint00 Bitfield object
        Bitfield<U32T> * get lint00 ();
        // Returns pointer to polf Bitfield object
        Bitfield<U32T> * get polf ();
        // Returns pointer to poldiag Bitfield object
        Bitfield<U32T> * get poldiag ();
        // Returns pointer to polc Bitfield object
        Bitfield<U32T> * get polc ();
        // Returns pointer to lintoutinv Bitfield object
        Bitfield<U32T> * get lintoutinv ();
        // Returns pointer to lintininv Bitfield object
        Bitfield<U32T> * get lintininv ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg4 class
    * This class represents the Reg4 register within the blockname IP Block.
    */
    class Reg4
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg4 Register object
        Register<U32T> * m_register;
        // Pointer to dregldoboost Bitfield object
        Bitfield<U32T> * m_bf dregldoboost ;
        // Pointer to bwselmin Bitfield object
        Bitfield<U32T> * m_bf bwselmin ;
        // Pointer to lint03 Bitfield object
        Bitfield<U32T> * m_bf lint03 ;
        // Pointer to lint02 Bitfield object
        Bitfield<U32T> * m_bf lint02 ;
        // Pointer to afehpsigphase Bitfield object
        Bitfield<U32T> * m_bf afehpsigphase ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg4();
        // Returns pointer to Reg4 Register object
        Register<U32T> * getRegister();
        // Returns pointer to dregldoboost Bitfield object
        Bitfield<U32T> * get dregldoboost ();
        // Returns pointer to bwselmin Bitfield object
        Bitfield<U32T> * get bwselmin ();
        // Returns pointer to lint03 Bitfield object
        Bitfield<U32T> * get lint03 ();
        // Returns pointer to lint02 Bitfield object
        Bitfield<U32T> * get lint02 ();
        // Returns pointer to afehpsigphase Bitfield object
        Bitfield<U32T> * get afehpsigphase ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg5 class
    * This class represents the Reg5 register within the blockname IP Block.
    */
    class Reg5
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg5 Register object
        Register<U32T> * m_register;
        // Pointer to filtadagain Bitfield object
        Bitfield<U32T> * m_bf filtadagain ;
        // Pointer to lint05 Bitfield object
        Bitfield<U32T> * m_bf lint05 ;
        // Pointer to lint04 Bitfield object
        Bitfield<U32T> * m_bf lint04 ;
        // Pointer to regreferrmax Bitfield object
        Bitfield<U32T> * m_bf regreferrmax ;
        // Pointer to refsigmonen Bitfield object
        Bitfield<U32T> * m_bf refsigmonen ;
        // Pointer to hallreferrmax Bitfield object
        Bitfield<U32T> * m_bf hallreferrmax ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg5();
        // Returns pointer to Reg5 Register object
        Register<U32T> * getRegister();
        // Returns pointer to filtadagain Bitfield object
        Bitfield<U32T> * get filtadagain ();
        // Returns pointer to lint05 Bitfield object
        Bitfield<U32T> * get lint05 ();
        // Returns pointer to lint04 Bitfield object
        Bitfield<U32T> * get lint04 ();
        // Returns pointer to regreferrmax Bitfield object
        Bitfield<U32T> * get regreferrmax ();
        // Returns pointer to refsigmonen Bitfield object
        Bitfield<U32T> * get refsigmonen ();
        // Returns pointer to hallreferrmax Bitfield object
        Bitfield<U32T> * get hallreferrmax ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg6 class
    * This class represents the Reg6 register within the blockname IP Block.
    */
    class Reg6
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg6 Register object
        Register<U32T> * m_register;
        // Pointer to sensmc Bitfield object
        Bitfield<U32T> * m_bf sensmc ;
        // Pointer to lint07 Bitfield object
        Bitfield<U32T> * m_bf lint07 ;
        // Pointer to lint06 Bitfield object
        Bitfield<U32T> * m_bf lint06 ;
        // Pointer to spdiagine Bitfield object
        Bitfield<U32T> * m_bf spdiagine ;
        // Pointer to spdiagen Bitfield object
        Bitfield<U32T> * m_bf spdiagen ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg6();
        // Returns pointer to Reg6 Register object
        Register<U32T> * getRegister();
        // Returns pointer to sensmc Bitfield object
        Bitfield<U32T> * get sensmc ();
        // Returns pointer to lint07 Bitfield object
        Bitfield<U32T> * get lint07 ();
        // Returns pointer to lint06 Bitfield object
        Bitfield<U32T> * get lint06 ();
        // Returns pointer to spdiagine Bitfield object
        Bitfield<U32T> * get spdiagine ();
        // Returns pointer to spdiagen Bitfield object
        Bitfield<U32T> * get spdiagen ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg7 class
    * This class represents the Reg7 register within the blockname IP Block.
    */
    class Reg7
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg7 Register object
        Register<U32T> * m_register;
        // Pointer to tsenchopcfg Bitfield object
        Bitfield<U32T> * m_bf tsenchopcfg ;
        // Pointer to spdiagrate Bitfield object
        Bitfield<U32T> * m_bf spdiagrate ;
        // Pointer to lint09 Bitfield object
        Bitfield<U32T> * m_bf lint09 ;
        // Pointer to lint08 Bitfield object
        Bitfield<U32T> * m_bf lint08 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg7();
        // Returns pointer to Reg7 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tsenchopcfg Bitfield object
        Bitfield<U32T> * get tsenchopcfg ();
        // Returns pointer to spdiagrate Bitfield object
        Bitfield<U32T> * get spdiagrate ();
        // Returns pointer to lint09 Bitfield object
        Bitfield<U32T> * get lint09 ();
        // Returns pointer to lint08 Bitfield object
        Bitfield<U32T> * get lint08 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg8 class
    * This class represents the Reg8 register within the blockname IP Block.
    */
    class Reg8
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg8 Register object
        Register<U32T> * m_register;
        // Pointer to toff Bitfield object
        Bitfield<U32T> * m_bf toff ;
        // Pointer to lint11 Bitfield object
        Bitfield<U32T> * m_bf lint11 ;
        // Pointer to lint10 Bitfield object
        Bitfield<U32T> * m_bf lint10 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg8();
        // Returns pointer to Reg8 Register object
        Register<U32T> * getRegister();
        // Returns pointer to toff Bitfield object
        Bitfield<U32T> * get toff ();
        // Returns pointer to lint11 Bitfield object
        Bitfield<U32T> * get lint11 ();
        // Returns pointer to lint10 Bitfield object
        Bitfield<U32T> * get lint10 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg9 class
    * This class represents the Reg9 register within the blockname IP Block.
    */
    class Reg9
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg9 Register object
        Register<U32T> * m_register;
        // Pointer to lint13 Bitfield object
        Bitfield<U32T> * m_bf lint13 ;
        // Pointer to lint12 Bitfield object
        Bitfield<U32T> * m_bf lint12 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg9();
        // Returns pointer to Reg9 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint13 Bitfield object
        Bitfield<U32T> * get lint13 ();
        // Returns pointer to lint12 Bitfield object
        Bitfield<U32T> * get lint12 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg10 class
    * This class represents the Reg10 register within the blockname IP Block.
    */
    class Reg10
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg10 Register object
        Register<U32T> * m_register;
        // Pointer to lint15 Bitfield object
        Bitfield<U32T> * m_bf lint15 ;
        // Pointer to lint14 Bitfield object
        Bitfield<U32T> * m_bf lint14 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg10();
        // Returns pointer to Reg10 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint15 Bitfield object
        Bitfield<U32T> * get lint15 ();
        // Returns pointer to lint14 Bitfield object
        Bitfield<U32T> * get lint14 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg11 class
    * This class represents the Reg11 register within the blockname IP Block.
    */
    class Reg11
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg11 Register object
        Register<U32T> * m_register;
        // Pointer to tslp Bitfield object
        Bitfield<U32T> * m_bf tslp ;
        // Pointer to plinqvo Bitfield object
        Bitfield<U32T> * m_bf plinqvo ;
        // Pointer to lint16 Bitfield object
        Bitfield<U32T> * m_bf lint16 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg11();
        // Returns pointer to Reg11 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tslp Bitfield object
        Bitfield<U32T> * get tslp ();
        // Returns pointer to plinqvo Bitfield object
        Bitfield<U32T> * get plinqvo ();
        // Returns pointer to lint16 Bitfield object
        Bitfield<U32T> * get lint16 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg12 class
    * This class represents the Reg12 register within the blockname IP Block.
    */
    class Reg12
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg12 Register object
        Register<U32T> * m_register;
        // Pointer to qoc Bitfield object
        Bitfield<U32T> * m_bf qoc ;
        // Pointer to plinsens Bitfield object
        Bitfield<U32T> * m_bf plinsens ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg12();
        // Returns pointer to Reg12 Register object
        Register<U32T> * getRegister();
        // Returns pointer to qoc Bitfield object
        Bitfield<U32T> * get qoc ();
        // Returns pointer to plinsens Bitfield object
        Bitfield<U32T> * get plinsens ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg13 class
    * This class represents the Reg13 register within the blockname IP Block.
    */
    class Reg13
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg13 Register object
        Register<U32T> * m_register;
        // Pointer to tzero Bitfield object
        Bitfield<U32T> * m_bf tzero ;
        // Pointer to qotchotc Bitfield object
        Bitfield<U32T> * m_bf qotchotc ;
        // Pointer to qotccldc Bitfield object
        Bitfield<U32T> * m_bf qotccldc ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg13();
        // Returns pointer to Reg13 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tzero Bitfield object
        Bitfield<U32T> * get tzero ();
        // Returns pointer to qotchotc Bitfield object
        Bitfield<U32T> * get qotchotc ();
        // Returns pointer to qotccldc Bitfield object
        Bitfield<U32T> * get qotccldc ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg14 class
    * This class represents the Reg14 register within the blockname IP Block.
    */
    class Reg14
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg14 Register object
        Register<U32T> * m_register;
        // Pointer to refsigmonhall Bitfield object
        Bitfield<U32T> * m_bf refsigmonhall ;
        // Pointer to clamph Bitfield object
        Bitfield<U32T> * m_bf clamph ;
        // Pointer to refsigmonbg Bitfield object
        Bitfield<U32T> * m_bf refsigmonbg ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg14();
        // Returns pointer to Reg14 Register object
        Register<U32T> * getRegister();
        // Returns pointer to refsigmonhall Bitfield object
        Bitfield<U32T> * get refsigmonhall ();
        // Returns pointer to clamph Bitfield object
        Bitfield<U32T> * get clamph ();
        // Returns pointer to refsigmonbg Bitfield object
        Bitfield<U32T> * get refsigmonbg ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg15 class
    * This class represents the Reg15 register within the blockname IP Block.
    */
    class Reg15
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg15 Register object
        Register<U32T> * m_register;
        // Pointer to sensc Bitfield object
        Bitfield<U32T> * m_bf sensc ;
        // Pointer to clampl Bitfield object
        Bitfield<U32T> * m_bf clampl ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg15();
        // Returns pointer to Reg15 Register object
        Register<U32T> * getRegister();
        // Returns pointer to sensc Bitfield object
        Bitfield<U32T> * get sensc ();
        // Returns pointer to clampl Bitfield object
        Bitfield<U32T> * get clampl ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg16 class
    * This class represents the Reg16 register within the blockname IP Block.
    */
    class Reg16
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg16 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2cldc Bitfield object
        Bitfield<U32T> * m_bf senstc2cldc ;
        // Pointer to sensf Bitfield object
        Bitfield<U32T> * m_bf sensf ;
        // Pointer to sensdiag Bitfield object
        Bitfield<U32T> * m_bf sensdiag ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg16();
        // Returns pointer to Reg16 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2cldc Bitfield object
        Bitfield<U32T> * get senstc2cldc ();
        // Returns pointer to sensf Bitfield object
        Bitfield<U32T> * get sensf ();
        // Returns pointer to sensdiag Bitfield object
        Bitfield<U32T> * get sensdiag ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg17 class
    * This class represents the Reg17 register within the blockname IP Block.
    */
    class Reg17
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg17 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2cldf Bitfield object
        Bitfield<U32T> * m_bf senstc2cldf ;
        // Pointer to senstc1clddiag Bitfield object
        Bitfield<U32T> * m_bf senstc1clddiag ;
        // Pointer to senstc1cldc Bitfield object
        Bitfield<U32T> * m_bf senstc1cldc ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg17();
        // Returns pointer to Reg17 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2cldf Bitfield object
        Bitfield<U32T> * get senstc2cldf ();
        // Returns pointer to senstc1clddiag Bitfield object
        Bitfield<U32T> * get senstc1clddiag ();
        // Returns pointer to senstc1cldc Bitfield object
        Bitfield<U32T> * get senstc1cldc ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg18 class
    * This class represents the Reg18 register within the blockname IP Block.
    */
    class Reg18
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg18 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2hotc Bitfield object
        Bitfield<U32T> * m_bf senstc2hotc ;
        // Pointer to senstc1hotc Bitfield object
        Bitfield<U32T> * m_bf senstc1hotc ;
        // Pointer to senstc1cldf Bitfield object
        Bitfield<U32T> * m_bf senstc1cldf ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg18();
        // Returns pointer to Reg18 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2hotc Bitfield object
        Bitfield<U32T> * get senstc2hotc ();
        // Returns pointer to senstc1hotc Bitfield object
        Bitfield<U32T> * get senstc1hotc ();
        // Returns pointer to senstc1cldf Bitfield object
        Bitfield<U32T> * get senstc1cldf ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg19 class
    * This class represents the Reg19 register within the blockname IP Block.
    */
    class Reg19
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg19 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2hotf Bitfield object
        Bitfield<U32T> * m_bf senstc2hotf ;
        // Pointer to senstc1hotf Bitfield object
        Bitfield<U32T> * m_bf senstc1hotf ;
        // Pointer to senstc1hotdiag Bitfield object
        Bitfield<U32T> * m_bf senstc1hotdiag ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg19();
        // Returns pointer to Reg19 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2hotf Bitfield object
        Bitfield<U32T> * get senstc2hotf ();
        // Returns pointer to senstc1hotf Bitfield object
        Bitfield<U32T> * get senstc1hotf ();
        // Returns pointer to senstc1hotdiag Bitfield object
        Bitfield<U32T> * get senstc1hotdiag ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg20 class
    * This class represents the Reg20 register within the blockname IP Block.
    */
    class Reg20
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg20 Register object
        Register<U32T> * m_register;
        // Pointer to vosf Bitfield object
        Bitfield<U32T> * m_bf vosf ;
        // Pointer to spdiagin Bitfield object
        Bitfield<U32T> * m_bf spdiagin ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg20();
        // Returns pointer to Reg20 Register object
        Register<U32T> * getRegister();
        // Returns pointer to vosf Bitfield object
        Bitfield<U32T> * get vosf ();
        // Returns pointer to spdiagin Bitfield object
        Bitfield<U32T> * get spdiagin ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg21 class
    * This class represents the Reg21 register within the blockname IP Block.
    */
    class Reg21
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg21 Register object
        Register<U32T> * m_register;
        // Pointer to vostchotf Bitfield object
        Bitfield<U32T> * m_bf vostchotf ;
        // Pointer to vostccldf Bitfield object
        Bitfield<U32T> * m_bf vostccldf ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg21();
        // Returns pointer to Reg21 Register object
        Register<U32T> * getRegister();
        // Returns pointer to vostchotf Bitfield object
        Bitfield<U32T> * get vostchotf ();
        // Returns pointer to vostccldf Bitfield object
        Bitfield<U32T> * get vostccldf ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg22 class
    * This class represents the Reg22 register within the blockname IP Block.
    */
    class Reg22
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg22 Register object
        Register<U32T> * m_register;
        // Pointer to lintbinhyst Bitfield object
        Bitfield<U32T> * m_bf lintbinhyst ;
        // Pointer to hptestlvl Bitfield object
        Bitfield<U32T> * m_bf hptestlvl ;
        // Pointer to hallisel Bitfield object
        Bitfield<U32T> * m_bf hallisel ;
        // Pointer to bwsel Bitfield object
        Bitfield<U32T> * m_bf bwsel ;
        // Pointer to afehpdrvchop Bitfield object
        Bitfield<U32T> * m_bf afehpdrvchop ;
        // Pointer to afegain Bitfield object
        Bitfield<U32T> * m_bf afegain ;
        // Pointer to lintoutinv Bitfield object
        Bitfield<U32T> * m_bf lintoutinv ;
        // Pointer to lintininv Bitfield object
        Bitfield<U32T> * m_bf lintininv ;
        // Pointer to linte Bitfield object
        Bitfield<U32T> * m_bf linte ;
        // Pointer to lintbine Bitfield object
        Bitfield<U32T> * m_bf lintbine ;
        // Pointer to linscalar Bitfield object
        Bitfield<U32T> * m_bf linscalar ;
        // Pointer to bgadcreferrmax Bitfield object
        Bitfield<U32T> * m_bf bgadcreferrmax ;
        // Pointer to asilftt Bitfield object
        Bitfield<U32T> * m_bf asilftt ;
        // Pointer to afezeroconfig Bitfield object
        Bitfield<U32T> * m_bf afezeroconfig ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg22();
        // Returns pointer to Reg22 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lintbinhyst Bitfield object
        Bitfield<U32T> * get lintbinhyst ();
        // Returns pointer to hptestlvl Bitfield object
        Bitfield<U32T> * get hptestlvl ();
        // Returns pointer to hallisel Bitfield object
        Bitfield<U32T> * get hallisel ();
        // Returns pointer to bwsel Bitfield object
        Bitfield<U32T> * get bwsel ();
        // Returns pointer to afehpdrvchop Bitfield object
        Bitfield<U32T> * get afehpdrvchop ();
        // Returns pointer to afegain Bitfield object
        Bitfield<U32T> * get afegain ();
        // Returns pointer to lintoutinv Bitfield object
        Bitfield<U32T> * get lintoutinv ();
        // Returns pointer to lintininv Bitfield object
        Bitfield<U32T> * get lintininv ();
        // Returns pointer to linte Bitfield object
        Bitfield<U32T> * get linte ();
        // Returns pointer to lintbine Bitfield object
        Bitfield<U32T> * get lintbine ();
        // Returns pointer to linscalar Bitfield object
        Bitfield<U32T> * get linscalar ();
        // Returns pointer to bgadcreferrmax Bitfield object
        Bitfield<U32T> * get bgadcreferrmax ();
        // Returns pointer to asilftt Bitfield object
        Bitfield<U32T> * get asilftt ();
        // Returns pointer to afezeroconfig Bitfield object
        Bitfield<U32T> * get afezeroconfig ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg23 class
    * This class represents the Reg23 register within the blockname IP Block.
    */
    class Reg23
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg23 Register object
        Register<U32T> * m_register;
        // Pointer to dregldoboost Bitfield object
        Bitfield<U32T> * m_bf dregldoboost ;
        // Pointer to lint01 Bitfield object
        Bitfield<U32T> * m_bf lint01 ;
        // Pointer to lint00 Bitfield object
        Bitfield<U32T> * m_bf lint00 ;
        // Pointer to afehpsigphase Bitfield object
        Bitfield<U32T> * m_bf afehpsigphase ;
        // Pointer to polf Bitfield object
        Bitfield<U32T> * m_bf polf ;
        // Pointer to poldiag Bitfield object
        Bitfield<U32T> * m_bf poldiag ;
        // Pointer to polc Bitfield object
        Bitfield<U32T> * m_bf polc ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg23();
        // Returns pointer to Reg23 Register object
        Register<U32T> * getRegister();
        // Returns pointer to dregldoboost Bitfield object
        Bitfield<U32T> * get dregldoboost ();
        // Returns pointer to lint01 Bitfield object
        Bitfield<U32T> * get lint01 ();
        // Returns pointer to lint00 Bitfield object
        Bitfield<U32T> * get lint00 ();
        // Returns pointer to afehpsigphase Bitfield object
        Bitfield<U32T> * get afehpsigphase ();
        // Returns pointer to polf Bitfield object
        Bitfield<U32T> * get polf ();
        // Returns pointer to poldiag Bitfield object
        Bitfield<U32T> * get poldiag ();
        // Returns pointer to polc Bitfield object
        Bitfield<U32T> * get polc ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg24 class
    * This class represents the Reg24 register within the blockname IP Block.
    */
    class Reg24
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg24 Register object
        Register<U32T> * m_register;
        // Pointer to filtadagain Bitfield object
        Bitfield<U32T> * m_bf filtadagain ;
        // Pointer to bwselmin Bitfield object
        Bitfield<U32T> * m_bf bwselmin ;
        // Pointer to lint03 Bitfield object
        Bitfield<U32T> * m_bf lint03 ;
        // Pointer to lint02 Bitfield object
        Bitfield<U32T> * m_bf lint02 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg24();
        // Returns pointer to Reg24 Register object
        Register<U32T> * getRegister();
        // Returns pointer to filtadagain Bitfield object
        Bitfield<U32T> * get filtadagain ();
        // Returns pointer to bwselmin Bitfield object
        Bitfield<U32T> * get bwselmin ();
        // Returns pointer to lint03 Bitfield object
        Bitfield<U32T> * get lint03 ();
        // Returns pointer to lint02 Bitfield object
        Bitfield<U32T> * get lint02 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg25 class
    * This class represents the Reg25 register within the blockname IP Block.
    */
    class Reg25
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg25 Register object
        Register<U32T> * m_register;
        // Pointer to sensmc Bitfield object
        Bitfield<U32T> * m_bf sensmc ;
        // Pointer to lint05 Bitfield object
        Bitfield<U32T> * m_bf lint05 ;
        // Pointer to lint04 Bitfield object
        Bitfield<U32T> * m_bf lint04 ;
        // Pointer to regreferrmax Bitfield object
        Bitfield<U32T> * m_bf regreferrmax ;
        // Pointer to refsigmonen Bitfield object
        Bitfield<U32T> * m_bf refsigmonen ;
        // Pointer to hallreferrmax Bitfield object
        Bitfield<U32T> * m_bf hallreferrmax ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg25();
        // Returns pointer to Reg25 Register object
        Register<U32T> * getRegister();
        // Returns pointer to sensmc Bitfield object
        Bitfield<U32T> * get sensmc ();
        // Returns pointer to lint05 Bitfield object
        Bitfield<U32T> * get lint05 ();
        // Returns pointer to lint04 Bitfield object
        Bitfield<U32T> * get lint04 ();
        // Returns pointer to regreferrmax Bitfield object
        Bitfield<U32T> * get regreferrmax ();
        // Returns pointer to refsigmonen Bitfield object
        Bitfield<U32T> * get refsigmonen ();
        // Returns pointer to hallreferrmax Bitfield object
        Bitfield<U32T> * get hallreferrmax ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg26 class
    * This class represents the Reg26 register within the blockname IP Block.
    */
    class Reg26
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg26 Register object
        Register<U32T> * m_register;
        // Pointer to tsenchopcfg Bitfield object
        Bitfield<U32T> * m_bf tsenchopcfg ;
        // Pointer to spdiagrate Bitfield object
        Bitfield<U32T> * m_bf spdiagrate ;
        // Pointer to lint07 Bitfield object
        Bitfield<U32T> * m_bf lint07 ;
        // Pointer to lint06 Bitfield object
        Bitfield<U32T> * m_bf lint06 ;
        // Pointer to spdiagine Bitfield object
        Bitfield<U32T> * m_bf spdiagine ;
        // Pointer to spdiagen Bitfield object
        Bitfield<U32T> * m_bf spdiagen ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg26();
        // Returns pointer to Reg26 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tsenchopcfg Bitfield object
        Bitfield<U32T> * get tsenchopcfg ();
        // Returns pointer to spdiagrate Bitfield object
        Bitfield<U32T> * get spdiagrate ();
        // Returns pointer to lint07 Bitfield object
        Bitfield<U32T> * get lint07 ();
        // Returns pointer to lint06 Bitfield object
        Bitfield<U32T> * get lint06 ();
        // Returns pointer to spdiagine Bitfield object
        Bitfield<U32T> * get spdiagine ();
        // Returns pointer to spdiagen Bitfield object
        Bitfield<U32T> * get spdiagen ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg27 class
    * This class represents the Reg27 register within the blockname IP Block.
    */
    class Reg27
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg27 Register object
        Register<U32T> * m_register;
        // Pointer to toff Bitfield object
        Bitfield<U32T> * m_bf toff ;
        // Pointer to lint09 Bitfield object
        Bitfield<U32T> * m_bf lint09 ;
        // Pointer to lint08 Bitfield object
        Bitfield<U32T> * m_bf lint08 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg27();
        // Returns pointer to Reg27 Register object
        Register<U32T> * getRegister();
        // Returns pointer to toff Bitfield object
        Bitfield<U32T> * get toff ();
        // Returns pointer to lint09 Bitfield object
        Bitfield<U32T> * get lint09 ();
        // Returns pointer to lint08 Bitfield object
        Bitfield<U32T> * get lint08 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg28 class
    * This class represents the Reg28 register within the blockname IP Block.
    */
    class Reg28
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg28 Register object
        Register<U32T> * m_register;
        // Pointer to lint11 Bitfield object
        Bitfield<U32T> * m_bf lint11 ;
        // Pointer to lint10 Bitfield object
        Bitfield<U32T> * m_bf lint10 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg28();
        // Returns pointer to Reg28 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint11 Bitfield object
        Bitfield<U32T> * get lint11 ();
        // Returns pointer to lint10 Bitfield object
        Bitfield<U32T> * get lint10 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg29 class
    * This class represents the Reg29 register within the blockname IP Block.
    */
    class Reg29
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg29 Register object
        Register<U32T> * m_register;
        // Pointer to lint13 Bitfield object
        Bitfield<U32T> * m_bf lint13 ;
        // Pointer to lint12 Bitfield object
        Bitfield<U32T> * m_bf lint12 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg29();
        // Returns pointer to Reg29 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint13 Bitfield object
        Bitfield<U32T> * get lint13 ();
        // Returns pointer to lint12 Bitfield object
        Bitfield<U32T> * get lint12 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg30 class
    * This class represents the Reg30 register within the blockname IP Block.
    */
    class Reg30
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg30 Register object
        Register<U32T> * m_register;
        // Pointer to lint15 Bitfield object
        Bitfield<U32T> * m_bf lint15 ;
        // Pointer to lint14 Bitfield object
        Bitfield<U32T> * m_bf lint14 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg30();
        // Returns pointer to Reg30 Register object
        Register<U32T> * getRegister();
        // Returns pointer to lint15 Bitfield object
        Bitfield<U32T> * get lint15 ();
        // Returns pointer to lint14 Bitfield object
        Bitfield<U32T> * get lint14 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg31 class
    * This class represents the Reg31 register within the blockname IP Block.
    */
    class Reg31
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg31 Register object
        Register<U32T> * m_register;
        // Pointer to tslp Bitfield object
        Bitfield<U32T> * m_bf tslp ;
        // Pointer to plinqvo Bitfield object
        Bitfield<U32T> * m_bf plinqvo ;
        // Pointer to lint16 Bitfield object
        Bitfield<U32T> * m_bf lint16 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg31();
        // Returns pointer to Reg31 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tslp Bitfield object
        Bitfield<U32T> * get tslp ();
        // Returns pointer to plinqvo Bitfield object
        Bitfield<U32T> * get plinqvo ();
        // Returns pointer to lint16 Bitfield object
        Bitfield<U32T> * get lint16 ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg32 class
    * This class represents the Reg32 register within the blockname IP Block.
    */
    class Reg32
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg32 Register object
        Register<U32T> * m_register;
        // Pointer to qoc Bitfield object
        Bitfield<U32T> * m_bf qoc ;
        // Pointer to plinsens Bitfield object
        Bitfield<U32T> * m_bf plinsens ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg32();
        // Returns pointer to Reg32 Register object
        Register<U32T> * getRegister();
        // Returns pointer to qoc Bitfield object
        Bitfield<U32T> * get qoc ();
        // Returns pointer to plinsens Bitfield object
        Bitfield<U32T> * get plinsens ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg33 class
    * This class represents the Reg33 register within the blockname IP Block.
    */
    class Reg33
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg33 Register object
        Register<U32T> * m_register;
        // Pointer to tzero Bitfield object
        Bitfield<U32T> * m_bf tzero ;
        // Pointer to qotchotc Bitfield object
        Bitfield<U32T> * m_bf qotchotc ;
        // Pointer to qotccldc Bitfield object
        Bitfield<U32T> * m_bf qotccldc ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg33();
        // Returns pointer to Reg33 Register object
        Register<U32T> * getRegister();
        // Returns pointer to tzero Bitfield object
        Bitfield<U32T> * get tzero ();
        // Returns pointer to qotchotc Bitfield object
        Bitfield<U32T> * get qotchotc ();
        // Returns pointer to qotccldc Bitfield object
        Bitfield<U32T> * get qotccldc ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg34 class
    * This class represents the Reg34 register within the blockname IP Block.
    */
    class Reg34
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg34 Register object
        Register<U32T> * m_register;
        // Pointer to refsigmonhall Bitfield object
        Bitfield<U32T> * m_bf refsigmonhall ;
        // Pointer to clamph Bitfield object
        Bitfield<U32T> * m_bf clamph ;
        // Pointer to refsigmonbg Bitfield object
        Bitfield<U32T> * m_bf refsigmonbg ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg34();
        // Returns pointer to Reg34 Register object
        Register<U32T> * getRegister();
        // Returns pointer to refsigmonhall Bitfield object
        Bitfield<U32T> * get refsigmonhall ();
        // Returns pointer to clamph Bitfield object
        Bitfield<U32T> * get clamph ();
        // Returns pointer to refsigmonbg Bitfield object
        Bitfield<U32T> * get refsigmonbg ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg35 class
    * This class represents the Reg35 register within the blockname IP Block.
    */
    class Reg35
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg35 Register object
        Register<U32T> * m_register;
        // Pointer to sensc Bitfield object
        Bitfield<U32T> * m_bf sensc ;
        // Pointer to clampl Bitfield object
        Bitfield<U32T> * m_bf clampl ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg35();
        // Returns pointer to Reg35 Register object
        Register<U32T> * getRegister();
        // Returns pointer to sensc Bitfield object
        Bitfield<U32T> * get sensc ();
        // Returns pointer to clampl Bitfield object
        Bitfield<U32T> * get clampl ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg36 class
    * This class represents the Reg36 register within the blockname IP Block.
    */
    class Reg36
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg36 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2cldc Bitfield object
        Bitfield<U32T> * m_bf senstc2cldc ;
        // Pointer to sensf Bitfield object
        Bitfield<U32T> * m_bf sensf ;
        // Pointer to sensdiag Bitfield object
        Bitfield<U32T> * m_bf sensdiag ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg36();
        // Returns pointer to Reg36 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2cldc Bitfield object
        Bitfield<U32T> * get senstc2cldc ();
        // Returns pointer to sensf Bitfield object
        Bitfield<U32T> * get sensf ();
        // Returns pointer to sensdiag Bitfield object
        Bitfield<U32T> * get sensdiag ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg37 class
    * This class represents the Reg37 register within the blockname IP Block.
    */
    class Reg37
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg37 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2cldf Bitfield object
        Bitfield<U32T> * m_bf senstc2cldf ;
        // Pointer to senstc1clddiag Bitfield object
        Bitfield<U32T> * m_bf senstc1clddiag ;
        // Pointer to senstc1cldc Bitfield object
        Bitfield<U32T> * m_bf senstc1cldc ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg37();
        // Returns pointer to Reg37 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2cldf Bitfield object
        Bitfield<U32T> * get senstc2cldf ();
        // Returns pointer to senstc1clddiag Bitfield object
        Bitfield<U32T> * get senstc1clddiag ();
        // Returns pointer to senstc1cldc Bitfield object
        Bitfield<U32T> * get senstc1cldc ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg38 class
    * This class represents the Reg38 register within the blockname IP Block.
    */
    class Reg38
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg38 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2hotc Bitfield object
        Bitfield<U32T> * m_bf senstc2hotc ;
        // Pointer to senstc1hotc Bitfield object
        Bitfield<U32T> * m_bf senstc1hotc ;
        // Pointer to senstc1cldf Bitfield object
        Bitfield<U32T> * m_bf senstc1cldf ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg38();
        // Returns pointer to Reg38 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2hotc Bitfield object
        Bitfield<U32T> * get senstc2hotc ();
        // Returns pointer to senstc1hotc Bitfield object
        Bitfield<U32T> * get senstc1hotc ();
        // Returns pointer to senstc1cldf Bitfield object
        Bitfield<U32T> * get senstc1cldf ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg39 class
    * This class represents the Reg39 register within the blockname IP Block.
    */
    class Reg39
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg39 Register object
        Register<U32T> * m_register;
        // Pointer to senstc2hotf Bitfield object
        Bitfield<U32T> * m_bf senstc2hotf ;
        // Pointer to senstc1hotf Bitfield object
        Bitfield<U32T> * m_bf senstc1hotf ;
        // Pointer to senstc1hotdiag Bitfield object
        Bitfield<U32T> * m_bf senstc1hotdiag ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg39();
        // Returns pointer to Reg39 Register object
        Register<U32T> * getRegister();
        // Returns pointer to senstc2hotf Bitfield object
        Bitfield<U32T> * get senstc2hotf ();
        // Returns pointer to senstc1hotf Bitfield object
        Bitfield<U32T> * get senstc1hotf ();
        // Returns pointer to senstc1hotdiag Bitfield object
        Bitfield<U32T> * get senstc1hotdiag ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg40 class
    * This class represents the Reg40 register within the blockname IP Block.
    */
    class Reg40
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg40 Register object
        Register<U32T> * m_register;
        // Pointer to vosf Bitfield object
        Bitfield<U32T> * m_bf vosf ;
        // Pointer to spdiagin Bitfield object
        Bitfield<U32T> * m_bf spdiagin ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg40();
        // Returns pointer to Reg40 Register object
        Register<U32T> * getRegister();
        // Returns pointer to vosf Bitfield object
        Bitfield<U32T> * get vosf ();
        // Returns pointer to spdiagin Bitfield object
        Bitfield<U32T> * get spdiagin ();
    };
    
    /*****************************************************************************/
    
    /**
    * Reg41 class
    * This class represents the Reg41 register within the blockname IP Block.
    */
    class Reg41
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to Reg41 Register object
        Register<U32T> * m_register;
        // Pointer to vostchotf Bitfield object
        Bitfield<U32T> * m_bf vostchotf ;
        // Pointer to vostccldf Bitfield object
        Bitfield<U32T> * m_bf vostccldf ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        Reg41();
        // Returns pointer to Reg41 Register object
        Register<U32T> * getRegister();
        // Returns pointer to vostchotf Bitfield object
        Bitfield<U32T> * get vostchotf ();
        // Returns pointer to vostccldf Bitfield object
        Bitfield<U32T> * get vostccldf ();
    };
    
    
} //namespace DUOLOG

#endif /* __BLOCKNAME_REGISTERS_H */
