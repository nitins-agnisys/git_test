/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test1.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/


#ifndef __TEST1_H
#define __TEST1_H

#include "Access.h"
#include "test1Registers.h"
#include "LocatedRegister.h"

namespace DUOLOG
{
    
    class test1
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        regname * m_regsec1regname_0;
        regname * m_regsec1regname_1;
        regname * m_regsec1regname_2;
        regname * m_regsec1regname_3;
        regname * m_regsec1regname_4;
        regname * m_regsec1regname_5;
        regname * m_regsec1regname_6;
        regname * m_regsec1regname_7;
        regname * m_regsec1regname_8;
        regname * m_regsec1regname_9;
        regname * m_regsec1regname_10;
        regname * m_regsec1regname_11;
        regname * m_regsec1regname_12;
        regname * m_regsec1regname_13;
        regname * m_regsec1regname_14;
        regname * m_regsec1regname_15;
        regname * m_regsec1regname_16;
        regname * m_regsec1regname_17;
        regname * m_regsec1regname_18;
        regname * m_regsec1regname_19;
        regname * m_regsec1regname_20;
        regname * m_regsec1regname_21;
        regname * m_regsec1regname_22;
        regname * m_regsec1regname_23;
        regname * m_regsec1regname_24;
        regname * m_regsec1regname_25;
        regname * m_regsec1regname_26;
        regname * m_regsec1regname_27;
        regname * m_regsec1regname_28;
        regname * m_regsec1regname_29;
        regname * m_regsec1regname_30;
        regname * m_regsec1regname_31;
        regname * m_regsec1regname_32;
        regname * m_regsec1regname_33;
        regname * m_regsec1regname_34;
        regname * m_regsec1regname_35;
        regname * m_regsec1regname_36;
        regname * m_regsec1regname_37;
        regname * m_regsec1regname_38;
        regname * m_regsec1regname_39;
        regname * m_regsec1regname_40;
        regname * m_regsec1regname_41;
        regname * m_regsec1regname_42;
        regname * m_regsec1regname_43;
        regname * m_regsec1regname_44;
        regname * m_regsec1regname_45;
        regname * m_regsec1regname_46;
        regname * m_regsec1regname_47;
        regname * m_regsec1regname_48;
        regname * m_regsec1regname_49;
        regname * m_regsec1regname_50;
        regname * m_regsec1regname_51;
        regname * m_regsec1regname_52;
        regname * m_regsec1regname_53;
        regname * m_regsec1regname_54;
        regname * m_regsec1regname_55;
        regname * m_regsec1regname_56;
        regname * m_regsec1regname_57;
        regname * m_regsec1regname_58;
        regname * m_regsec1regname_59;
        regname * m_regsec1regname_60;
        regname * m_regsec1regname_61;
        regname * m_regsec1regname_62;
        regname * m_regsec1regname_63;
        regname223 * m_regregname223;
        regname2 * m_regregname2;
        regname22222 * m_regregname22222;
        regname22 * m_regregname22;
        regname * m_regshadowregname_0;
        // Pointer to LocatedRegister object representing sec1regname_0 at address 0x0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_0;
        // Pointer to LocatedRegister object representing sec1regname_1 at address 0x4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_1;
        // Pointer to LocatedRegister object representing sec1regname_2 at address 0x8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_2;
        // Pointer to LocatedRegister object representing sec1regname_3 at address 0xc
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_3;
        // Pointer to LocatedRegister object representing sec1regname_4 at address 0x10
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_4;
        // Pointer to LocatedRegister object representing sec1regname_5 at address 0x14
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_5;
        // Pointer to LocatedRegister object representing sec1regname_6 at address 0x18
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_6;
        // Pointer to LocatedRegister object representing sec1regname_7 at address 0x1c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_7;
        // Pointer to LocatedRegister object representing sec1regname_8 at address 0x20
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_8;
        // Pointer to LocatedRegister object representing sec1regname_9 at address 0x24
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_9;
        // Pointer to LocatedRegister object representing sec1regname_10 at address 0x28
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_10;
        // Pointer to LocatedRegister object representing sec1regname_11 at address 0x2c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_11;
        // Pointer to LocatedRegister object representing sec1regname_12 at address 0x30
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_12;
        // Pointer to LocatedRegister object representing sec1regname_13 at address 0x34
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_13;
        // Pointer to LocatedRegister object representing sec1regname_14 at address 0x38
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_14;
        // Pointer to LocatedRegister object representing sec1regname_15 at address 0x3c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_15;
        // Pointer to LocatedRegister object representing sec1regname_16 at address 0x40
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_16;
        // Pointer to LocatedRegister object representing sec1regname_17 at address 0x44
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_17;
        // Pointer to LocatedRegister object representing sec1regname_18 at address 0x48
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_18;
        // Pointer to LocatedRegister object representing sec1regname_19 at address 0x4c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_19;
        // Pointer to LocatedRegister object representing sec1regname_20 at address 0x50
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_20;
        // Pointer to LocatedRegister object representing sec1regname_21 at address 0x54
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_21;
        // Pointer to LocatedRegister object representing sec1regname_22 at address 0x58
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_22;
        // Pointer to LocatedRegister object representing sec1regname_23 at address 0x5c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_23;
        // Pointer to LocatedRegister object representing sec1regname_24 at address 0x60
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_24;
        // Pointer to LocatedRegister object representing sec1regname_25 at address 0x64
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_25;
        // Pointer to LocatedRegister object representing sec1regname_26 at address 0x68
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_26;
        // Pointer to LocatedRegister object representing sec1regname_27 at address 0x6c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_27;
        // Pointer to LocatedRegister object representing sec1regname_28 at address 0x70
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_28;
        // Pointer to LocatedRegister object representing sec1regname_29 at address 0x74
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_29;
        // Pointer to LocatedRegister object representing sec1regname_30 at address 0x78
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_30;
        // Pointer to LocatedRegister object representing sec1regname_31 at address 0x7c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_31;
        // Pointer to LocatedRegister object representing sec1regname_32 at address 0x80
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_32;
        // Pointer to LocatedRegister object representing sec1regname_33 at address 0x84
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_33;
        // Pointer to LocatedRegister object representing sec1regname_34 at address 0x88
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_34;
        // Pointer to LocatedRegister object representing sec1regname_35 at address 0x8c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_35;
        // Pointer to LocatedRegister object representing sec1regname_36 at address 0x90
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_36;
        // Pointer to LocatedRegister object representing sec1regname_37 at address 0x94
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_37;
        // Pointer to LocatedRegister object representing sec1regname_38 at address 0x98
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_38;
        // Pointer to LocatedRegister object representing sec1regname_39 at address 0x9c
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_39;
        // Pointer to LocatedRegister object representing sec1regname_40 at address 0xa0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_40;
        // Pointer to LocatedRegister object representing sec1regname_41 at address 0xa4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_41;
        // Pointer to LocatedRegister object representing sec1regname_42 at address 0xa8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_42;
        // Pointer to LocatedRegister object representing sec1regname_43 at address 0xac
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_43;
        // Pointer to LocatedRegister object representing sec1regname_44 at address 0xb0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_44;
        // Pointer to LocatedRegister object representing sec1regname_45 at address 0xb4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_45;
        // Pointer to LocatedRegister object representing sec1regname_46 at address 0xb8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_46;
        // Pointer to LocatedRegister object representing sec1regname_47 at address 0xbc
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_47;
        // Pointer to LocatedRegister object representing sec1regname_48 at address 0xc0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_48;
        // Pointer to LocatedRegister object representing sec1regname_49 at address 0xc4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_49;
        // Pointer to LocatedRegister object representing sec1regname_50 at address 0xc8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_50;
        // Pointer to LocatedRegister object representing sec1regname_51 at address 0xcc
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_51;
        // Pointer to LocatedRegister object representing sec1regname_52 at address 0xd0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_52;
        // Pointer to LocatedRegister object representing sec1regname_53 at address 0xd4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_53;
        // Pointer to LocatedRegister object representing sec1regname_54 at address 0xd8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_54;
        // Pointer to LocatedRegister object representing sec1regname_55 at address 0xdc
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_55;
        // Pointer to LocatedRegister object representing sec1regname_56 at address 0xe0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_56;
        // Pointer to LocatedRegister object representing sec1regname_57 at address 0xe4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_57;
        // Pointer to LocatedRegister object representing sec1regname_58 at address 0xe8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_58;
        // Pointer to LocatedRegister object representing sec1regname_59 at address 0xec
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_59;
        // Pointer to LocatedRegister object representing sec1regname_60 at address 0xf0
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_60;
        // Pointer to LocatedRegister object representing sec1regname_61 at address 0xf4
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_61;
        // Pointer to LocatedRegister object representing sec1regname_62 at address 0xf8
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_62;
        // Pointer to LocatedRegister object representing sec1regname_63 at address 0xfc
        LocatedRegister<U32T> * m_loctest1_intfsec1regname_63;
        // Pointer to LocatedRegister object representing regname223 at address 0x100
        LocatedRegister<U8T> * m_loctest1_intfregname223;
        // Pointer to LocatedRegister object representing regname2 at address 0x101
        LocatedRegister<U8T> * m_loctest1_intfregname2;
        // Pointer to LocatedRegister object representing regname22222 at address 0x102
        LocatedRegister<U8T> * m_loctest1_intfregname22222;
        // Pointer to LocatedRegister object representing regname22 at address 0x103
        LocatedRegister<U8T> * m_loctest1_intfregname22;
        // Pointer to LocatedRegister object representing shadowregname_0 at address 0x104
        LocatedRegister<U16T> * m_loctest1_intfshadowregname_0;
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Creates register objects
        void createRegisters();
        // Creates memory objects
        void createMemories();
        // Locates registers
        void locateRegisters();
        // Locates memories
        void locateMemories();
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // sec1regname_0 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_0_ADDRESS = 0x0;
        // sec1regname_1 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_1_ADDRESS = 0x4;
        // sec1regname_2 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_2_ADDRESS = 0x8;
        // sec1regname_3 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_3_ADDRESS = 0xc;
        // sec1regname_4 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_4_ADDRESS = 0x10;
        // sec1regname_5 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_5_ADDRESS = 0x14;
        // sec1regname_6 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_6_ADDRESS = 0x18;
        // sec1regname_7 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_7_ADDRESS = 0x1c;
        // sec1regname_8 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_8_ADDRESS = 0x20;
        // sec1regname_9 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_9_ADDRESS = 0x24;
        // sec1regname_10 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_10_ADDRESS = 0x28;
        // sec1regname_11 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_11_ADDRESS = 0x2c;
        // sec1regname_12 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_12_ADDRESS = 0x30;
        // sec1regname_13 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_13_ADDRESS = 0x34;
        // sec1regname_14 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_14_ADDRESS = 0x38;
        // sec1regname_15 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_15_ADDRESS = 0x3c;
        // sec1regname_16 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_16_ADDRESS = 0x40;
        // sec1regname_17 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_17_ADDRESS = 0x44;
        // sec1regname_18 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_18_ADDRESS = 0x48;
        // sec1regname_19 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_19_ADDRESS = 0x4c;
        // sec1regname_20 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_20_ADDRESS = 0x50;
        // sec1regname_21 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_21_ADDRESS = 0x54;
        // sec1regname_22 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_22_ADDRESS = 0x58;
        // sec1regname_23 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_23_ADDRESS = 0x5c;
        // sec1regname_24 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_24_ADDRESS = 0x60;
        // sec1regname_25 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_25_ADDRESS = 0x64;
        // sec1regname_26 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_26_ADDRESS = 0x68;
        // sec1regname_27 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_27_ADDRESS = 0x6c;
        // sec1regname_28 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_28_ADDRESS = 0x70;
        // sec1regname_29 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_29_ADDRESS = 0x74;
        // sec1regname_30 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_30_ADDRESS = 0x78;
        // sec1regname_31 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_31_ADDRESS = 0x7c;
        // sec1regname_32 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_32_ADDRESS = 0x80;
        // sec1regname_33 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_33_ADDRESS = 0x84;
        // sec1regname_34 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_34_ADDRESS = 0x88;
        // sec1regname_35 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_35_ADDRESS = 0x8c;
        // sec1regname_36 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_36_ADDRESS = 0x90;
        // sec1regname_37 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_37_ADDRESS = 0x94;
        // sec1regname_38 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_38_ADDRESS = 0x98;
        // sec1regname_39 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_39_ADDRESS = 0x9c;
        // sec1regname_40 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_40_ADDRESS = 0xa0;
        // sec1regname_41 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_41_ADDRESS = 0xa4;
        // sec1regname_42 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_42_ADDRESS = 0xa8;
        // sec1regname_43 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_43_ADDRESS = 0xac;
        // sec1regname_44 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_44_ADDRESS = 0xb0;
        // sec1regname_45 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_45_ADDRESS = 0xb4;
        // sec1regname_46 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_46_ADDRESS = 0xb8;
        // sec1regname_47 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_47_ADDRESS = 0xbc;
        // sec1regname_48 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_48_ADDRESS = 0xc0;
        // sec1regname_49 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_49_ADDRESS = 0xc4;
        // sec1regname_50 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_50_ADDRESS = 0xc8;
        // sec1regname_51 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_51_ADDRESS = 0xcc;
        // sec1regname_52 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_52_ADDRESS = 0xd0;
        // sec1regname_53 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_53_ADDRESS = 0xd4;
        // sec1regname_54 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_54_ADDRESS = 0xd8;
        // sec1regname_55 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_55_ADDRESS = 0xdc;
        // sec1regname_56 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_56_ADDRESS = 0xe0;
        // sec1regname_57 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_57_ADDRESS = 0xe4;
        // sec1regname_58 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_58_ADDRESS = 0xe8;
        // sec1regname_59 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_59_ADDRESS = 0xec;
        // sec1regname_60 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_60_ADDRESS = 0xf0;
        // sec1regname_61 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_61_ADDRESS = 0xf4;
        // sec1regname_62 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_62_ADDRESS = 0xf8;
        // sec1regname_63 register offset address definition(s)
        static const U32T TEST1_INTF_SEC1REGNAME_63_ADDRESS = 0xfc;
        // regname223 register offset address definition(s)
        static const U8T TEST1_INTF_REGNAME223_ADDRESS = 0x100;
        // regname2 register offset address definition(s)
        static const U8T TEST1_INTF_REGNAME2_ADDRESS = 0x101;
        // regname22222 register offset address definition(s)
        static const U8T TEST1_INTF_REGNAME22222_ADDRESS = 0x102;
        // regname22 register offset address definition(s)
        static const U8T TEST1_INTF_REGNAME22_ADDRESS = 0x103;
        // shadowregname_0 register offset address definition(s)
        static const U16T TEST1_INTF_SHADOWREGNAME_0_ADDRESS = 0x104;
        
        
        
        
        // test1 transaction port enumerations
        enum transactionPortType {
        test1_INTF_TRANSACTION_PORT
    };
    // ------------------------------------------------------------------------
    // Public member functions
    // ------------------------------------------------------------------------
    // Class constructor
    test1();
    // Initialises all registers in the component
    void initialise();
    // Returns a pointer to the sec1regname_0 object representing sec1regname_0
    regname * getsec1regname_0();
    // Returns a pointer to the sec1regname_1 object representing sec1regname_1
    regname * getsec1regname_1();
    // Returns a pointer to the sec1regname_2 object representing sec1regname_2
    regname * getsec1regname_2();
    // Returns a pointer to the sec1regname_3 object representing sec1regname_3
    regname * getsec1regname_3();
    // Returns a pointer to the sec1regname_4 object representing sec1regname_4
    regname * getsec1regname_4();
    // Returns a pointer to the sec1regname_5 object representing sec1regname_5
    regname * getsec1regname_5();
    // Returns a pointer to the sec1regname_6 object representing sec1regname_6
    regname * getsec1regname_6();
    // Returns a pointer to the sec1regname_7 object representing sec1regname_7
    regname * getsec1regname_7();
    // Returns a pointer to the sec1regname_8 object representing sec1regname_8
    regname * getsec1regname_8();
    // Returns a pointer to the sec1regname_9 object representing sec1regname_9
    regname * getsec1regname_9();
    // Returns a pointer to the sec1regname_10 object representing sec1regname_10
    regname * getsec1regname_10();
    // Returns a pointer to the sec1regname_11 object representing sec1regname_11
    regname * getsec1regname_11();
    // Returns a pointer to the sec1regname_12 object representing sec1regname_12
    regname * getsec1regname_12();
    // Returns a pointer to the sec1regname_13 object representing sec1regname_13
    regname * getsec1regname_13();
    // Returns a pointer to the sec1regname_14 object representing sec1regname_14
    regname * getsec1regname_14();
    // Returns a pointer to the sec1regname_15 object representing sec1regname_15
    regname * getsec1regname_15();
    // Returns a pointer to the sec1regname_16 object representing sec1regname_16
    regname * getsec1regname_16();
    // Returns a pointer to the sec1regname_17 object representing sec1regname_17
    regname * getsec1regname_17();
    // Returns a pointer to the sec1regname_18 object representing sec1regname_18
    regname * getsec1regname_18();
    // Returns a pointer to the sec1regname_19 object representing sec1regname_19
    regname * getsec1regname_19();
    // Returns a pointer to the sec1regname_20 object representing sec1regname_20
    regname * getsec1regname_20();
    // Returns a pointer to the sec1regname_21 object representing sec1regname_21
    regname * getsec1regname_21();
    // Returns a pointer to the sec1regname_22 object representing sec1regname_22
    regname * getsec1regname_22();
    // Returns a pointer to the sec1regname_23 object representing sec1regname_23
    regname * getsec1regname_23();
    // Returns a pointer to the sec1regname_24 object representing sec1regname_24
    regname * getsec1regname_24();
    // Returns a pointer to the sec1regname_25 object representing sec1regname_25
    regname * getsec1regname_25();
    // Returns a pointer to the sec1regname_26 object representing sec1regname_26
    regname * getsec1regname_26();
    // Returns a pointer to the sec1regname_27 object representing sec1regname_27
    regname * getsec1regname_27();
    // Returns a pointer to the sec1regname_28 object representing sec1regname_28
    regname * getsec1regname_28();
    // Returns a pointer to the sec1regname_29 object representing sec1regname_29
    regname * getsec1regname_29();
    // Returns a pointer to the sec1regname_30 object representing sec1regname_30
    regname * getsec1regname_30();
    // Returns a pointer to the sec1regname_31 object representing sec1regname_31
    regname * getsec1regname_31();
    // Returns a pointer to the sec1regname_32 object representing sec1regname_32
    regname * getsec1regname_32();
    // Returns a pointer to the sec1regname_33 object representing sec1regname_33
    regname * getsec1regname_33();
    // Returns a pointer to the sec1regname_34 object representing sec1regname_34
    regname * getsec1regname_34();
    // Returns a pointer to the sec1regname_35 object representing sec1regname_35
    regname * getsec1regname_35();
    // Returns a pointer to the sec1regname_36 object representing sec1regname_36
    regname * getsec1regname_36();
    // Returns a pointer to the sec1regname_37 object representing sec1regname_37
    regname * getsec1regname_37();
    // Returns a pointer to the sec1regname_38 object representing sec1regname_38
    regname * getsec1regname_38();
    // Returns a pointer to the sec1regname_39 object representing sec1regname_39
    regname * getsec1regname_39();
    // Returns a pointer to the sec1regname_40 object representing sec1regname_40
    regname * getsec1regname_40();
    // Returns a pointer to the sec1regname_41 object representing sec1regname_41
    regname * getsec1regname_41();
    // Returns a pointer to the sec1regname_42 object representing sec1regname_42
    regname * getsec1regname_42();
    // Returns a pointer to the sec1regname_43 object representing sec1regname_43
    regname * getsec1regname_43();
    // Returns a pointer to the sec1regname_44 object representing sec1regname_44
    regname * getsec1regname_44();
    // Returns a pointer to the sec1regname_45 object representing sec1regname_45
    regname * getsec1regname_45();
    // Returns a pointer to the sec1regname_46 object representing sec1regname_46
    regname * getsec1regname_46();
    // Returns a pointer to the sec1regname_47 object representing sec1regname_47
    regname * getsec1regname_47();
    // Returns a pointer to the sec1regname_48 object representing sec1regname_48
    regname * getsec1regname_48();
    // Returns a pointer to the sec1regname_49 object representing sec1regname_49
    regname * getsec1regname_49();
    // Returns a pointer to the sec1regname_50 object representing sec1regname_50
    regname * getsec1regname_50();
    // Returns a pointer to the sec1regname_51 object representing sec1regname_51
    regname * getsec1regname_51();
    // Returns a pointer to the sec1regname_52 object representing sec1regname_52
    regname * getsec1regname_52();
    // Returns a pointer to the sec1regname_53 object representing sec1regname_53
    regname * getsec1regname_53();
    // Returns a pointer to the sec1regname_54 object representing sec1regname_54
    regname * getsec1regname_54();
    // Returns a pointer to the sec1regname_55 object representing sec1regname_55
    regname * getsec1regname_55();
    // Returns a pointer to the sec1regname_56 object representing sec1regname_56
    regname * getsec1regname_56();
    // Returns a pointer to the sec1regname_57 object representing sec1regname_57
    regname * getsec1regname_57();
    // Returns a pointer to the sec1regname_58 object representing sec1regname_58
    regname * getsec1regname_58();
    // Returns a pointer to the sec1regname_59 object representing sec1regname_59
    regname * getsec1regname_59();
    // Returns a pointer to the sec1regname_60 object representing sec1regname_60
    regname * getsec1regname_60();
    // Returns a pointer to the sec1regname_61 object representing sec1regname_61
    regname * getsec1regname_61();
    // Returns a pointer to the sec1regname_62 object representing sec1regname_62
    regname * getsec1regname_62();
    // Returns a pointer to the sec1regname_63 object representing sec1regname_63
    regname * getsec1regname_63();
    // Returns a pointer to the regname223 object representing regname223
    regname223 * getregname223();
    // Returns a pointer to the regname2 object representing regname2
    regname2 * getregname2();
    // Returns a pointer to the regname22222 object representing regname22222
    regname22222 * getregname22222();
    // Returns a pointer to the regname22 object representing regname22
    regname22 * getregname22();
    // Returns a pointer to the shadowregname_0 object representing shadowregname_0
    regname * getshadowregname_0();
    // Returns pointer to LocatedRegister object representing sec1regname_0 at address 0x0
    LocatedRegister<U32T> * gettest1_intfsec1regname_0();
    // Returns pointer to LocatedRegister object representing sec1regname_1 at address 0x4
    LocatedRegister<U32T> * gettest1_intfsec1regname_1();
    // Returns pointer to LocatedRegister object representing sec1regname_2 at address 0x8
    LocatedRegister<U32T> * gettest1_intfsec1regname_2();
    // Returns pointer to LocatedRegister object representing sec1regname_3 at address 0xc
    LocatedRegister<U32T> * gettest1_intfsec1regname_3();
    // Returns pointer to LocatedRegister object representing sec1regname_4 at address 0x10
    LocatedRegister<U32T> * gettest1_intfsec1regname_4();
    // Returns pointer to LocatedRegister object representing sec1regname_5 at address 0x14
    LocatedRegister<U32T> * gettest1_intfsec1regname_5();
    // Returns pointer to LocatedRegister object representing sec1regname_6 at address 0x18
    LocatedRegister<U32T> * gettest1_intfsec1regname_6();
    // Returns pointer to LocatedRegister object representing sec1regname_7 at address 0x1c
    LocatedRegister<U32T> * gettest1_intfsec1regname_7();
    // Returns pointer to LocatedRegister object representing sec1regname_8 at address 0x20
    LocatedRegister<U32T> * gettest1_intfsec1regname_8();
    // Returns pointer to LocatedRegister object representing sec1regname_9 at address 0x24
    LocatedRegister<U32T> * gettest1_intfsec1regname_9();
    // Returns pointer to LocatedRegister object representing sec1regname_10 at address 0x28
    LocatedRegister<U32T> * gettest1_intfsec1regname_10();
    // Returns pointer to LocatedRegister object representing sec1regname_11 at address 0x2c
    LocatedRegister<U32T> * gettest1_intfsec1regname_11();
    // Returns pointer to LocatedRegister object representing sec1regname_12 at address 0x30
    LocatedRegister<U32T> * gettest1_intfsec1regname_12();
    // Returns pointer to LocatedRegister object representing sec1regname_13 at address 0x34
    LocatedRegister<U32T> * gettest1_intfsec1regname_13();
    // Returns pointer to LocatedRegister object representing sec1regname_14 at address 0x38
    LocatedRegister<U32T> * gettest1_intfsec1regname_14();
    // Returns pointer to LocatedRegister object representing sec1regname_15 at address 0x3c
    LocatedRegister<U32T> * gettest1_intfsec1regname_15();
    // Returns pointer to LocatedRegister object representing sec1regname_16 at address 0x40
    LocatedRegister<U32T> * gettest1_intfsec1regname_16();
    // Returns pointer to LocatedRegister object representing sec1regname_17 at address 0x44
    LocatedRegister<U32T> * gettest1_intfsec1regname_17();
    // Returns pointer to LocatedRegister object representing sec1regname_18 at address 0x48
    LocatedRegister<U32T> * gettest1_intfsec1regname_18();
    // Returns pointer to LocatedRegister object representing sec1regname_19 at address 0x4c
    LocatedRegister<U32T> * gettest1_intfsec1regname_19();
    // Returns pointer to LocatedRegister object representing sec1regname_20 at address 0x50
    LocatedRegister<U32T> * gettest1_intfsec1regname_20();
    // Returns pointer to LocatedRegister object representing sec1regname_21 at address 0x54
    LocatedRegister<U32T> * gettest1_intfsec1regname_21();
    // Returns pointer to LocatedRegister object representing sec1regname_22 at address 0x58
    LocatedRegister<U32T> * gettest1_intfsec1regname_22();
    // Returns pointer to LocatedRegister object representing sec1regname_23 at address 0x5c
    LocatedRegister<U32T> * gettest1_intfsec1regname_23();
    // Returns pointer to LocatedRegister object representing sec1regname_24 at address 0x60
    LocatedRegister<U32T> * gettest1_intfsec1regname_24();
    // Returns pointer to LocatedRegister object representing sec1regname_25 at address 0x64
    LocatedRegister<U32T> * gettest1_intfsec1regname_25();
    // Returns pointer to LocatedRegister object representing sec1regname_26 at address 0x68
    LocatedRegister<U32T> * gettest1_intfsec1regname_26();
    // Returns pointer to LocatedRegister object representing sec1regname_27 at address 0x6c
    LocatedRegister<U32T> * gettest1_intfsec1regname_27();
    // Returns pointer to LocatedRegister object representing sec1regname_28 at address 0x70
    LocatedRegister<U32T> * gettest1_intfsec1regname_28();
    // Returns pointer to LocatedRegister object representing sec1regname_29 at address 0x74
    LocatedRegister<U32T> * gettest1_intfsec1regname_29();
    // Returns pointer to LocatedRegister object representing sec1regname_30 at address 0x78
    LocatedRegister<U32T> * gettest1_intfsec1regname_30();
    // Returns pointer to LocatedRegister object representing sec1regname_31 at address 0x7c
    LocatedRegister<U32T> * gettest1_intfsec1regname_31();
    // Returns pointer to LocatedRegister object representing sec1regname_32 at address 0x80
    LocatedRegister<U32T> * gettest1_intfsec1regname_32();
    // Returns pointer to LocatedRegister object representing sec1regname_33 at address 0x84
    LocatedRegister<U32T> * gettest1_intfsec1regname_33();
    // Returns pointer to LocatedRegister object representing sec1regname_34 at address 0x88
    LocatedRegister<U32T> * gettest1_intfsec1regname_34();
    // Returns pointer to LocatedRegister object representing sec1regname_35 at address 0x8c
    LocatedRegister<U32T> * gettest1_intfsec1regname_35();
    // Returns pointer to LocatedRegister object representing sec1regname_36 at address 0x90
    LocatedRegister<U32T> * gettest1_intfsec1regname_36();
    // Returns pointer to LocatedRegister object representing sec1regname_37 at address 0x94
    LocatedRegister<U32T> * gettest1_intfsec1regname_37();
    // Returns pointer to LocatedRegister object representing sec1regname_38 at address 0x98
    LocatedRegister<U32T> * gettest1_intfsec1regname_38();
    // Returns pointer to LocatedRegister object representing sec1regname_39 at address 0x9c
    LocatedRegister<U32T> * gettest1_intfsec1regname_39();
    // Returns pointer to LocatedRegister object representing sec1regname_40 at address 0xa0
    LocatedRegister<U32T> * gettest1_intfsec1regname_40();
    // Returns pointer to LocatedRegister object representing sec1regname_41 at address 0xa4
    LocatedRegister<U32T> * gettest1_intfsec1regname_41();
    // Returns pointer to LocatedRegister object representing sec1regname_42 at address 0xa8
    LocatedRegister<U32T> * gettest1_intfsec1regname_42();
    // Returns pointer to LocatedRegister object representing sec1regname_43 at address 0xac
    LocatedRegister<U32T> * gettest1_intfsec1regname_43();
    // Returns pointer to LocatedRegister object representing sec1regname_44 at address 0xb0
    LocatedRegister<U32T> * gettest1_intfsec1regname_44();
    // Returns pointer to LocatedRegister object representing sec1regname_45 at address 0xb4
    LocatedRegister<U32T> * gettest1_intfsec1regname_45();
    // Returns pointer to LocatedRegister object representing sec1regname_46 at address 0xb8
    LocatedRegister<U32T> * gettest1_intfsec1regname_46();
    // Returns pointer to LocatedRegister object representing sec1regname_47 at address 0xbc
    LocatedRegister<U32T> * gettest1_intfsec1regname_47();
    // Returns pointer to LocatedRegister object representing sec1regname_48 at address 0xc0
    LocatedRegister<U32T> * gettest1_intfsec1regname_48();
    // Returns pointer to LocatedRegister object representing sec1regname_49 at address 0xc4
    LocatedRegister<U32T> * gettest1_intfsec1regname_49();
    // Returns pointer to LocatedRegister object representing sec1regname_50 at address 0xc8
    LocatedRegister<U32T> * gettest1_intfsec1regname_50();
    // Returns pointer to LocatedRegister object representing sec1regname_51 at address 0xcc
    LocatedRegister<U32T> * gettest1_intfsec1regname_51();
    // Returns pointer to LocatedRegister object representing sec1regname_52 at address 0xd0
    LocatedRegister<U32T> * gettest1_intfsec1regname_52();
    // Returns pointer to LocatedRegister object representing sec1regname_53 at address 0xd4
    LocatedRegister<U32T> * gettest1_intfsec1regname_53();
    // Returns pointer to LocatedRegister object representing sec1regname_54 at address 0xd8
    LocatedRegister<U32T> * gettest1_intfsec1regname_54();
    // Returns pointer to LocatedRegister object representing sec1regname_55 at address 0xdc
    LocatedRegister<U32T> * gettest1_intfsec1regname_55();
    // Returns pointer to LocatedRegister object representing sec1regname_56 at address 0xe0
    LocatedRegister<U32T> * gettest1_intfsec1regname_56();
    // Returns pointer to LocatedRegister object representing sec1regname_57 at address 0xe4
    LocatedRegister<U32T> * gettest1_intfsec1regname_57();
    // Returns pointer to LocatedRegister object representing sec1regname_58 at address 0xe8
    LocatedRegister<U32T> * gettest1_intfsec1regname_58();
    // Returns pointer to LocatedRegister object representing sec1regname_59 at address 0xec
    LocatedRegister<U32T> * gettest1_intfsec1regname_59();
    // Returns pointer to LocatedRegister object representing sec1regname_60 at address 0xf0
    LocatedRegister<U32T> * gettest1_intfsec1regname_60();
    // Returns pointer to LocatedRegister object representing sec1regname_61 at address 0xf4
    LocatedRegister<U32T> * gettest1_intfsec1regname_61();
    // Returns pointer to LocatedRegister object representing sec1regname_62 at address 0xf8
    LocatedRegister<U32T> * gettest1_intfsec1regname_62();
    // Returns pointer to LocatedRegister object representing sec1regname_63 at address 0xfc
    LocatedRegister<U32T> * gettest1_intfsec1regname_63();
    // Returns pointer to LocatedRegister object representing regname223 at address 0x100
    LocatedRegister<U8T> * gettest1_intfregname223();
    // Returns pointer to LocatedRegister object representing regname2 at address 0x101
    LocatedRegister<U8T> * gettest1_intfregname2();
    // Returns pointer to LocatedRegister object representing regname22222 at address 0x102
    LocatedRegister<U8T> * gettest1_intfregname22222();
    // Returns pointer to LocatedRegister object representing regname22 at address 0x103
    LocatedRegister<U8T> * gettest1_intfregname22();
    // Returns pointer to LocatedRegister object representing shadowregname_0 at address 0x104
    LocatedRegister<U16T> * gettest1_intfshadowregname_0();
    // Write access function for sec1regname_0 at address 0x0
    void  writetest1_intfsec1regname_0(U32T  data, U32T dataMask);
    // Write access function for sec1regname_1 at address 0x4
    void  writetest1_intfsec1regname_1(U32T  data, U32T dataMask);
    // Write access function for sec1regname_2 at address 0x8
    void  writetest1_intfsec1regname_2(U32T  data, U32T dataMask);
    // Write access function for sec1regname_3 at address 0xc
    void  writetest1_intfsec1regname_3(U32T  data, U32T dataMask);
    // Write access function for sec1regname_4 at address 0x10
    void  writetest1_intfsec1regname_4(U32T  data, U32T dataMask);
    // Write access function for sec1regname_5 at address 0x14
    void  writetest1_intfsec1regname_5(U32T  data, U32T dataMask);
    // Write access function for sec1regname_6 at address 0x18
    void  writetest1_intfsec1regname_6(U32T  data, U32T dataMask);
    // Write access function for sec1regname_7 at address 0x1c
    void  writetest1_intfsec1regname_7(U32T  data, U32T dataMask);
    // Write access function for sec1regname_8 at address 0x20
    void  writetest1_intfsec1regname_8(U32T  data, U32T dataMask);
    // Write access function for sec1regname_9 at address 0x24
    void  writetest1_intfsec1regname_9(U32T  data, U32T dataMask);
    // Write access function for sec1regname_10 at address 0x28
    void  writetest1_intfsec1regname_10(U32T  data, U32T dataMask);
    // Write access function for sec1regname_11 at address 0x2c
    void  writetest1_intfsec1regname_11(U32T  data, U32T dataMask);
    // Write access function for sec1regname_12 at address 0x30
    void  writetest1_intfsec1regname_12(U32T  data, U32T dataMask);
    // Write access function for sec1regname_13 at address 0x34
    void  writetest1_intfsec1regname_13(U32T  data, U32T dataMask);
    // Write access function for sec1regname_14 at address 0x38
    void  writetest1_intfsec1regname_14(U32T  data, U32T dataMask);
    // Write access function for sec1regname_15 at address 0x3c
    void  writetest1_intfsec1regname_15(U32T  data, U32T dataMask);
    // Write access function for sec1regname_16 at address 0x40
    void  writetest1_intfsec1regname_16(U32T  data, U32T dataMask);
    // Write access function for sec1regname_17 at address 0x44
    void  writetest1_intfsec1regname_17(U32T  data, U32T dataMask);
    // Write access function for sec1regname_18 at address 0x48
    void  writetest1_intfsec1regname_18(U32T  data, U32T dataMask);
    // Write access function for sec1regname_19 at address 0x4c
    void  writetest1_intfsec1regname_19(U32T  data, U32T dataMask);
    // Write access function for sec1regname_20 at address 0x50
    void  writetest1_intfsec1regname_20(U32T  data, U32T dataMask);
    // Write access function for sec1regname_21 at address 0x54
    void  writetest1_intfsec1regname_21(U32T  data, U32T dataMask);
    // Write access function for sec1regname_22 at address 0x58
    void  writetest1_intfsec1regname_22(U32T  data, U32T dataMask);
    // Write access function for sec1regname_23 at address 0x5c
    void  writetest1_intfsec1regname_23(U32T  data, U32T dataMask);
    // Write access function for sec1regname_24 at address 0x60
    void  writetest1_intfsec1regname_24(U32T  data, U32T dataMask);
    // Write access function for sec1regname_25 at address 0x64
    void  writetest1_intfsec1regname_25(U32T  data, U32T dataMask);
    // Write access function for sec1regname_26 at address 0x68
    void  writetest1_intfsec1regname_26(U32T  data, U32T dataMask);
    // Write access function for sec1regname_27 at address 0x6c
    void  writetest1_intfsec1regname_27(U32T  data, U32T dataMask);
    // Write access function for sec1regname_28 at address 0x70
    void  writetest1_intfsec1regname_28(U32T  data, U32T dataMask);
    // Write access function for sec1regname_29 at address 0x74
    void  writetest1_intfsec1regname_29(U32T  data, U32T dataMask);
    // Write access function for sec1regname_30 at address 0x78
    void  writetest1_intfsec1regname_30(U32T  data, U32T dataMask);
    // Write access function for sec1regname_31 at address 0x7c
    void  writetest1_intfsec1regname_31(U32T  data, U32T dataMask);
    // Write access function for sec1regname_32 at address 0x80
    void  writetest1_intfsec1regname_32(U32T  data, U32T dataMask);
    // Write access function for sec1regname_33 at address 0x84
    void  writetest1_intfsec1regname_33(U32T  data, U32T dataMask);
    // Write access function for sec1regname_34 at address 0x88
    void  writetest1_intfsec1regname_34(U32T  data, U32T dataMask);
    // Write access function for sec1regname_35 at address 0x8c
    void  writetest1_intfsec1regname_35(U32T  data, U32T dataMask);
    // Write access function for sec1regname_36 at address 0x90
    void  writetest1_intfsec1regname_36(U32T  data, U32T dataMask);
    // Write access function for sec1regname_37 at address 0x94
    void  writetest1_intfsec1regname_37(U32T  data, U32T dataMask);
    // Write access function for sec1regname_38 at address 0x98
    void  writetest1_intfsec1regname_38(U32T  data, U32T dataMask);
    // Write access function for sec1regname_39 at address 0x9c
    void  writetest1_intfsec1regname_39(U32T  data, U32T dataMask);
    // Write access function for sec1regname_40 at address 0xa0
    void  writetest1_intfsec1regname_40(U32T  data, U32T dataMask);
    // Write access function for sec1regname_41 at address 0xa4
    void  writetest1_intfsec1regname_41(U32T  data, U32T dataMask);
    // Write access function for sec1regname_42 at address 0xa8
    void  writetest1_intfsec1regname_42(U32T  data, U32T dataMask);
    // Write access function for sec1regname_43 at address 0xac
    void  writetest1_intfsec1regname_43(U32T  data, U32T dataMask);
    // Write access function for sec1regname_44 at address 0xb0
    void  writetest1_intfsec1regname_44(U32T  data, U32T dataMask);
    // Write access function for sec1regname_45 at address 0xb4
    void  writetest1_intfsec1regname_45(U32T  data, U32T dataMask);
    // Write access function for sec1regname_46 at address 0xb8
    void  writetest1_intfsec1regname_46(U32T  data, U32T dataMask);
    // Write access function for sec1regname_47 at address 0xbc
    void  writetest1_intfsec1regname_47(U32T  data, U32T dataMask);
    // Write access function for sec1regname_48 at address 0xc0
    void  writetest1_intfsec1regname_48(U32T  data, U32T dataMask);
    // Write access function for sec1regname_49 at address 0xc4
    void  writetest1_intfsec1regname_49(U32T  data, U32T dataMask);
    // Write access function for sec1regname_50 at address 0xc8
    void  writetest1_intfsec1regname_50(U32T  data, U32T dataMask);
    // Write access function for sec1regname_51 at address 0xcc
    void  writetest1_intfsec1regname_51(U32T  data, U32T dataMask);
    // Write access function for sec1regname_52 at address 0xd0
    void  writetest1_intfsec1regname_52(U32T  data, U32T dataMask);
    // Write access function for sec1regname_53 at address 0xd4
    void  writetest1_intfsec1regname_53(U32T  data, U32T dataMask);
    // Write access function for sec1regname_54 at address 0xd8
    void  writetest1_intfsec1regname_54(U32T  data, U32T dataMask);
    // Write access function for sec1regname_55 at address 0xdc
    void  writetest1_intfsec1regname_55(U32T  data, U32T dataMask);
    // Write access function for sec1regname_56 at address 0xe0
    void  writetest1_intfsec1regname_56(U32T  data, U32T dataMask);
    // Write access function for sec1regname_57 at address 0xe4
    void  writetest1_intfsec1regname_57(U32T  data, U32T dataMask);
    // Write access function for sec1regname_58 at address 0xe8
    void  writetest1_intfsec1regname_58(U32T  data, U32T dataMask);
    // Write access function for sec1regname_59 at address 0xec
    void  writetest1_intfsec1regname_59(U32T  data, U32T dataMask);
    // Write access function for sec1regname_60 at address 0xf0
    void  writetest1_intfsec1regname_60(U32T  data, U32T dataMask);
    // Write access function for sec1regname_61 at address 0xf4
    void  writetest1_intfsec1regname_61(U32T  data, U32T dataMask);
    // Write access function for sec1regname_62 at address 0xf8
    void  writetest1_intfsec1regname_62(U32T  data, U32T dataMask);
    // Write access function for sec1regname_63 at address 0xfc
    void  writetest1_intfsec1regname_63(U32T  data, U32T dataMask);
    // Write access function for regname223 at address 0x100
    void  writetest1_intfregname223(U8T  data, U8T dataMask);
    // Write access function for regname2 at address 0x101
    void  writetest1_intfregname2(U8T  data, U8T dataMask);
    // Write access function for regname22222 at address 0x102
    void  writetest1_intfregname22222(U8T  data, U8T dataMask);
    // Write access function for regname22 at address 0x103
    void  writetest1_intfregname22(U8T  data, U8T dataMask);
    // Write access function for shadowregname_0 at address 0x104
    void  writetest1_intfshadowregname_0(U16T  data, U16T dataMask);
    // Write access function for test1 component test1_intf transaction target
    void  writetest1_intf(U32T  address, U32T data, U32T dataMask);
    // Write byte lanes access function for test1 component test1_intf transaction target
    void  writeByteLanestest1_intf(U32T  address, U8T BE, U32T data);
    // Write access function for component
    void  write (transactionPortType transactionPort, U32T  address, U32T data, U32T dataMask);
    // Read access function for sec1regname_0 at address 0x0
    U32T readtest1_intfsec1regname_0();
    // Read access function for sec1regname_1 at address 0x4
    U32T readtest1_intfsec1regname_1();
    // Read access function for sec1regname_2 at address 0x8
    U32T readtest1_intfsec1regname_2();
    // Read access function for sec1regname_3 at address 0xc
    U32T readtest1_intfsec1regname_3();
    // Read access function for sec1regname_4 at address 0x10
    U32T readtest1_intfsec1regname_4();
    // Read access function for sec1regname_5 at address 0x14
    U32T readtest1_intfsec1regname_5();
    // Read access function for sec1regname_6 at address 0x18
    U32T readtest1_intfsec1regname_6();
    // Read access function for sec1regname_7 at address 0x1c
    U32T readtest1_intfsec1regname_7();
    // Read access function for sec1regname_8 at address 0x20
    U32T readtest1_intfsec1regname_8();
    // Read access function for sec1regname_9 at address 0x24
    U32T readtest1_intfsec1regname_9();
    // Read access function for sec1regname_10 at address 0x28
    U32T readtest1_intfsec1regname_10();
    // Read access function for sec1regname_11 at address 0x2c
    U32T readtest1_intfsec1regname_11();
    // Read access function for sec1regname_12 at address 0x30
    U32T readtest1_intfsec1regname_12();
    // Read access function for sec1regname_13 at address 0x34
    U32T readtest1_intfsec1regname_13();
    // Read access function for sec1regname_14 at address 0x38
    U32T readtest1_intfsec1regname_14();
    // Read access function for sec1regname_15 at address 0x3c
    U32T readtest1_intfsec1regname_15();
    // Read access function for sec1regname_16 at address 0x40
    U32T readtest1_intfsec1regname_16();
    // Read access function for sec1regname_17 at address 0x44
    U32T readtest1_intfsec1regname_17();
    // Read access function for sec1regname_18 at address 0x48
    U32T readtest1_intfsec1regname_18();
    // Read access function for sec1regname_19 at address 0x4c
    U32T readtest1_intfsec1regname_19();
    // Read access function for sec1regname_20 at address 0x50
    U32T readtest1_intfsec1regname_20();
    // Read access function for sec1regname_21 at address 0x54
    U32T readtest1_intfsec1regname_21();
    // Read access function for sec1regname_22 at address 0x58
    U32T readtest1_intfsec1regname_22();
    // Read access function for sec1regname_23 at address 0x5c
    U32T readtest1_intfsec1regname_23();
    // Read access function for sec1regname_24 at address 0x60
    U32T readtest1_intfsec1regname_24();
    // Read access function for sec1regname_25 at address 0x64
    U32T readtest1_intfsec1regname_25();
    // Read access function for sec1regname_26 at address 0x68
    U32T readtest1_intfsec1regname_26();
    // Read access function for sec1regname_27 at address 0x6c
    U32T readtest1_intfsec1regname_27();
    // Read access function for sec1regname_28 at address 0x70
    U32T readtest1_intfsec1regname_28();
    // Read access function for sec1regname_29 at address 0x74
    U32T readtest1_intfsec1regname_29();
    // Read access function for sec1regname_30 at address 0x78
    U32T readtest1_intfsec1regname_30();
    // Read access function for sec1regname_31 at address 0x7c
    U32T readtest1_intfsec1regname_31();
    // Read access function for sec1regname_32 at address 0x80
    U32T readtest1_intfsec1regname_32();
    // Read access function for sec1regname_33 at address 0x84
    U32T readtest1_intfsec1regname_33();
    // Read access function for sec1regname_34 at address 0x88
    U32T readtest1_intfsec1regname_34();
    // Read access function for sec1regname_35 at address 0x8c
    U32T readtest1_intfsec1regname_35();
    // Read access function for sec1regname_36 at address 0x90
    U32T readtest1_intfsec1regname_36();
    // Read access function for sec1regname_37 at address 0x94
    U32T readtest1_intfsec1regname_37();
    // Read access function for sec1regname_38 at address 0x98
    U32T readtest1_intfsec1regname_38();
    // Read access function for sec1regname_39 at address 0x9c
    U32T readtest1_intfsec1regname_39();
    // Read access function for sec1regname_40 at address 0xa0
    U32T readtest1_intfsec1regname_40();
    // Read access function for sec1regname_41 at address 0xa4
    U32T readtest1_intfsec1regname_41();
    // Read access function for sec1regname_42 at address 0xa8
    U32T readtest1_intfsec1regname_42();
    // Read access function for sec1regname_43 at address 0xac
    U32T readtest1_intfsec1regname_43();
    // Read access function for sec1regname_44 at address 0xb0
    U32T readtest1_intfsec1regname_44();
    // Read access function for sec1regname_45 at address 0xb4
    U32T readtest1_intfsec1regname_45();
    // Read access function for sec1regname_46 at address 0xb8
    U32T readtest1_intfsec1regname_46();
    // Read access function for sec1regname_47 at address 0xbc
    U32T readtest1_intfsec1regname_47();
    // Read access function for sec1regname_48 at address 0xc0
    U32T readtest1_intfsec1regname_48();
    // Read access function for sec1regname_49 at address 0xc4
    U32T readtest1_intfsec1regname_49();
    // Read access function for sec1regname_50 at address 0xc8
    U32T readtest1_intfsec1regname_50();
    // Read access function for sec1regname_51 at address 0xcc
    U32T readtest1_intfsec1regname_51();
    // Read access function for sec1regname_52 at address 0xd0
    U32T readtest1_intfsec1regname_52();
    // Read access function for sec1regname_53 at address 0xd4
    U32T readtest1_intfsec1regname_53();
    // Read access function for sec1regname_54 at address 0xd8
    U32T readtest1_intfsec1regname_54();
    // Read access function for sec1regname_55 at address 0xdc
    U32T readtest1_intfsec1regname_55();
    // Read access function for sec1regname_56 at address 0xe0
    U32T readtest1_intfsec1regname_56();
    // Read access function for sec1regname_57 at address 0xe4
    U32T readtest1_intfsec1regname_57();
    // Read access function for sec1regname_58 at address 0xe8
    U32T readtest1_intfsec1regname_58();
    // Read access function for sec1regname_59 at address 0xec
    U32T readtest1_intfsec1regname_59();
    // Read access function for sec1regname_60 at address 0xf0
    U32T readtest1_intfsec1regname_60();
    // Read access function for sec1regname_61 at address 0xf4
    U32T readtest1_intfsec1regname_61();
    // Read access function for sec1regname_62 at address 0xf8
    U32T readtest1_intfsec1regname_62();
    // Read access function for sec1regname_63 at address 0xfc
    U32T readtest1_intfsec1regname_63();
    // Read access function for regname223 at address 0x100
    U8T readtest1_intfregname223();
    // Read access function for regname2 at address 0x101
    U8T readtest1_intfregname2();
    // Read access function for regname22222 at address 0x102
    U8T readtest1_intfregname22222();
    // Read access function for regname22 at address 0x103
    U8T readtest1_intfregname22();
    // Read access function for shadowregname_0 at address 0x104
    U16T readtest1_intfshadowregname_0();
    // Read access function for test1 component test1_intf transaction target
    U32T readtest1_intf(U32T  address);
    // Read byte lanes access function for test1 component test1_intf transaction target
    U32T readByteLanestest1_intf(U32T  address, U8T BE);
    // Read access function for component
    U32T read(transactionPortType transactionPort, U32T  address);
};

} // namespace DUOLOG
#endif /* __CTT_H */
