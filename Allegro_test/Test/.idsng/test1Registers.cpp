/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test1.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/



#include "Access.h"
#include "test1Registers.h"

namespace DUOLOG
{
    
    
    /*****************************************************************************/
    
    /**
    *regname class constructor.
    * This creates an instance of the Register object that is used to represent
    * the regnameregister. In addition, an instance of the Bitfield object is
    * created for each bitfield associated with the regname register and is then
    * associated with the register object.
    */
    regname::regname()
    {
        // Create a new instance of the Bitfield object to represent f1  bitfield
        m_bff1 = new Bitfield<U32T> (0, 3, WRITE, READ);
        // Create a new instance of the Bitfield object to represent f2  bitfield
        m_bff2 = new Bitfield<U32T> (3, 5, WRITE, READ);
        // Declare an array containing pointers to all bitfields associated with the
        // regname register
        Bitfield<U32T> * bitfields [] = {
        m_bff1,
        m_bff2
    };
    // Create a new instance of the Register object to represent regname register
    m_register = new Register<U32T> (32, 0x00000008, 2, bitfields);
}

/**
* Returns pointer to regname Register object.
* @return Pointer to regname Register object (Register *).
*/
Register<U32T> * regname::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the f1 Bitfield Object
* @return Pointer to the f1 Bitfield Object (Bitfield *).
*/
Bitfield<U32T> * regname::getf1()
{
    return m_bff1;
}


/**
* Returns a pointer to the f2 Bitfield Object
* @return Pointer to the f2 Bitfield Object (Bitfield *).
*/
Bitfield<U32T> * regname::getf2()
{
    return m_bff2;
}

/*****************************************************************************/

/**
*regname223 class constructor.
* This creates an instance of the Register object that is used to represent
* the regname223register. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname223 register and is then
* associated with the register object.
*/
regname223::regname223()
{
    // Create a new instance of the Bitfield object to represent ft  bitfield
    m_bfft = new Bitfield<U8T> (1, 7, WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname223 register
    Bitfield<U8T> * bitfields [] = {
    m_bfft
};
// Create a new instance of the Register object to represent regname223 register
m_register = new Register<U8T> (8, 0x00, 1, bitfields);
}

/**
* Returns pointer to regname223 Register object.
* @return Pointer to regname223 Register object (Register *).
*/
Register<U8T> * regname223::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the ft Bitfield Object
* @return Pointer to the ft Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname223::getft()
{
    return m_bfft;
}

/*****************************************************************************/

/**
*regname2 class constructor.
* This creates an instance of the Register object that is used to represent
* the regname2register. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname2 register and is then
* associated with the register object.
*/
regname2::regname2()
{
    // Create a new instance of the Bitfield object to represent ff12  bitfield
    m_bfff12 = new Bitfield<U8T> (0, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f1  bitfield
    m_bff1 = new Bitfield<U8T> (1, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent ff1  bitfield
    m_bfff1 = new Bitfield<U8T> (2, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f12  bitfield
    m_bff12 = new Bitfield<U8T> (3, 1, WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname2 register
    Bitfield<U8T> * bitfields [] = {
    m_bfff12,
    m_bff1,
    m_bfff1,
    m_bff12
};
// Create a new instance of the Register object to represent regname2 register
m_register = new Register<U8T> (8, 0x05, 4, bitfields);
}

/**
* Returns pointer to regname2 Register object.
* @return Pointer to regname2 Register object (Register *).
*/
Register<U8T> * regname2::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the ff12 Bitfield Object
* @return Pointer to the ff12 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getff12()
{
    return m_bfff12;
}


/**
* Returns a pointer to the f1 Bitfield Object
* @return Pointer to the f1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf1()
{
    return m_bff1;
}


/**
* Returns a pointer to the ff1 Bitfield Object
* @return Pointer to the ff1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getff1()
{
    return m_bfff1;
}


/**
* Returns a pointer to the f12 Bitfield Object
* @return Pointer to the f12 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname2::getf12()
{
    return m_bff12;
}

/*****************************************************************************/

/**
*regname22222 class constructor.
* This creates an instance of the Register object that is used to represent
* the regname22222register. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname22222 register and is then
* associated with the register object.
*/
regname22222::regname22222()
{
    // Create a new instance of the Bitfield object to represent f3  bitfield
    m_bff3 = new Bitfield<U8T> (0, 2, NO_WRITE, READ);
    // Create a new instance of the Bitfield object to represent ff1  bitfield
    m_bfff1 = new Bitfield<U8T> (2, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f1  bitfield
    m_bff1 = new Bitfield<U8T> (3, 1, WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname22222 register
    Bitfield<U8T> * bitfields [] = {
    m_bff3,
    m_bfff1,
    m_bff1
};
// Create a new instance of the Register object to represent regname22222 register
m_register = new Register<U8T> (8, 0x05, 3, bitfields);
}

/**
* Returns pointer to regname22222 Register object.
* @return Pointer to regname22222 Register object (Register *).
*/
Register<U8T> * regname22222::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the f3 Bitfield Object
* @return Pointer to the f3 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname22222::getf3()
{
    return m_bff3;
}


/**
* Returns a pointer to the ff1 Bitfield Object
* @return Pointer to the ff1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname22222::getff1()
{
    return m_bfff1;
}


/**
* Returns a pointer to the f1 Bitfield Object
* @return Pointer to the f1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname22222::getf1()
{
    return m_bff1;
}

/*****************************************************************************/

/**
*regname22 class constructor.
* This creates an instance of the Register object that is used to represent
* the regname22register. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname22 register and is then
* associated with the register object.
*/
regname22::regname22()
{
    // Create a new instance of the Bitfield object to represent ff1  bitfield
    m_bfff1 = new Bitfield<U8T> (0, 1, WRITE, READ);
    // Create a new instance of the Bitfield object to represent f1  bitfield
    m_bff1 = new Bitfield<U8T> (3, 1, WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname22 register
    Bitfield<U8T> * bitfields [] = {
    m_bfff1,
    m_bff1
};
// Create a new instance of the Register object to represent regname22 register
m_register = new Register<U8T> (8, 0x01, 2, bitfields);
}

/**
* Returns pointer to regname22 Register object.
* @return Pointer to regname22 Register object (Register *).
*/
Register<U8T> * regname22::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the ff1 Bitfield Object
* @return Pointer to the ff1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname22::getff1()
{
    return m_bfff1;
}


/**
* Returns a pointer to the f1 Bitfield Object
* @return Pointer to the f1 Bitfield Object (Bitfield *).
*/
Bitfield<U8T> * regname22::getf1()
{
    return m_bff1;
}

/*****************************************************************************/

/**
*regname class constructor.
* This creates an instance of the Register object that is used to represent
* the regnameregister. In addition, an instance of the Bitfield object is
* created for each bitfield associated with the regname register and is then
* associated with the register object.
*/
regname::regname()
{
    // Create a new instance of the Bitfield object to represent rg1  bitfield
    m_bfrg1 = new Bitfield<U16T> (0, 6, WRITE, READ);
    // Create a new instance of the Bitfield object to represent rg2  bitfield
    m_bfrg2 = new Bitfield<U16T> (13, 2, NO_WRITE, READ);
    // Declare an array containing pointers to all bitfields associated with the
    // regname register
    Bitfield<U16T> * bitfields [] = {
    m_bfrg1,
    m_bfrg2
};
// Create a new instance of the Register object to represent regname register
m_register = new Register<U16T> (16, 0x0000, 2, bitfields);
}

/**
* Returns pointer to regname Register object.
* @return Pointer to regname Register object (Register *).
*/
Register<U16T> * regname::getRegister()
{
    return m_register;
}


/**
* Returns a pointer to the rg1 Bitfield Object
* @return Pointer to the rg1 Bitfield Object (Bitfield *).
*/
Bitfield<U16T> * regname::getrg1()
{
    return m_bfrg1;
}


/**
* Returns a pointer to the rg2 Bitfield Object
* @return Pointer to the rg2 Bitfield Object (Bitfield *).
*/
Bitfield<U16T> * regname::getrg2()
{
    return m_bfrg2;
}

} // namespace DUOLOG
