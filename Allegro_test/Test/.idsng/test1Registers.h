/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
** created by        :
** generated by      : Agnisys
** generated from    : D:\AgnisysProjects\git_test\Allegro_test\Test\test1.idsng
** IDesignSpec rev   : idsbatch v4.16.26.2

***** This code is generated with following settings ***
**---------------------------------------------------------------------------------------------------------------*/


#ifndef __TEST1_REGISTERS_H
#define __TEST1_REGISTERS_H

#include "Access.h"
#include "Bitfield.h"
#include "Register.h"

namespace DUOLOG
{
    
    
    /*****************************************************************************/
    
    /**
    * regname class
    * This class represents the regname register within the test1 IP Block.
    */
    class regname
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname Register object
        Register<U32T> * m_register;
        // Pointer to f1 Bitfield object
        Bitfield<U32T> * m_bf f1 ;
        // Pointer to f2 Bitfield object
        Bitfield<U32T> * m_bf f2 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname();
        // Returns pointer to regname Register object
        Register<U32T> * getRegister();
        // Returns pointer to f1 Bitfield object
        Bitfield<U32T> * get f1 ();
        // Returns pointer to f2 Bitfield object
        Bitfield<U32T> * get f2 ();
    };
    
    /*****************************************************************************/
    
    /**
    * regname223 class
    * This class represents the regname223 register within the test1 IP Block.
    */
    class regname223
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname223 Register object
        Register<U8T> * m_register;
        // Pointer to ft Bitfield object
        Bitfield<U8T> * m_bf ft ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname223();
        // Returns pointer to regname223 Register object
        Register<U8T> * getRegister();
        // Returns pointer to ft Bitfield object
        Bitfield<U8T> * get ft ();
    };
    
    /*****************************************************************************/
    
    /**
    * regname2 class
    * This class represents the regname2 register within the test1 IP Block.
    */
    class regname2
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname2 Register object
        Register<U8T> * m_register;
        // Pointer to ff12 Bitfield object
        Bitfield<U8T> * m_bf ff12 ;
        // Pointer to f1 Bitfield object
        Bitfield<U8T> * m_bf f1 ;
        // Pointer to ff1 Bitfield object
        Bitfield<U8T> * m_bf ff1 ;
        // Pointer to f12 Bitfield object
        Bitfield<U8T> * m_bf f12 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname2();
        // Returns pointer to regname2 Register object
        Register<U8T> * getRegister();
        // Returns pointer to ff12 Bitfield object
        Bitfield<U8T> * get ff12 ();
        // Returns pointer to f1 Bitfield object
        Bitfield<U8T> * get f1 ();
        // Returns pointer to ff1 Bitfield object
        Bitfield<U8T> * get ff1 ();
        // Returns pointer to f12 Bitfield object
        Bitfield<U8T> * get f12 ();
    };
    
    /*****************************************************************************/
    
    /**
    * regname22222 class
    * This class represents the regname22222 register within the test1 IP Block.
    */
    class regname22222
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname22222 Register object
        Register<U8T> * m_register;
        // Pointer to f3 Bitfield object
        Bitfield<U8T> * m_bf f3 ;
        // Pointer to ff1 Bitfield object
        Bitfield<U8T> * m_bf ff1 ;
        // Pointer to f1 Bitfield object
        Bitfield<U8T> * m_bf f1 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname22222();
        // Returns pointer to regname22222 Register object
        Register<U8T> * getRegister();
        // Returns pointer to f3 Bitfield object
        Bitfield<U8T> * get f3 ();
        // Returns pointer to ff1 Bitfield object
        Bitfield<U8T> * get ff1 ();
        // Returns pointer to f1 Bitfield object
        Bitfield<U8T> * get f1 ();
    };
    
    /*****************************************************************************/
    
    /**
    * regname22 class
    * This class represents the regname22 register within the test1 IP Block.
    */
    class regname22
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname22 Register object
        Register<U8T> * m_register;
        // Pointer to ff1 Bitfield object
        Bitfield<U8T> * m_bf ff1 ;
        // Pointer to f1 Bitfield object
        Bitfield<U8T> * m_bf f1 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname22();
        // Returns pointer to regname22 Register object
        Register<U8T> * getRegister();
        // Returns pointer to ff1 Bitfield object
        Bitfield<U8T> * get ff1 ();
        // Returns pointer to f1 Bitfield object
        Bitfield<U8T> * get f1 ();
    };
    
    /*****************************************************************************/
    
    /**
    * regname class
    * This class represents the regname register within the test1 IP Block.
    */
    class regname
    {
        private:
        // ------------------------------------------------------------------------
        // Private member variables
        // ------------------------------------------------------------------------
        // Pointer to regname Register object
        Register<U16T> * m_register;
        // Pointer to rg1 Bitfield object
        Bitfield<U16T> * m_bf rg1 ;
        // Pointer to rg2 Bitfield object
        Bitfield<U16T> * m_bf rg2 ;
        
        public:
        // ------------------------------------------------------------------------
        // Public member variables
        // ------------------------------------------------------------------------
        // Class constructor
        regname();
        // Returns pointer to regname Register object
        Register<U16T> * getRegister();
        // Returns pointer to rg1 Bitfield object
        Bitfield<U16T> * get rg1 ();
        // Returns pointer to rg2 Bitfield object
        Bitfield<U16T> * get rg2 ();
    };
    
    
} //namespace DUOLOG

#endif /* __TEST1_REGISTERS_H */
