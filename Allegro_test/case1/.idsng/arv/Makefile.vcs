include makefileseq
UVM_SRC = ${UVM_HOME}/src
UVM_FILES = $(UVM_SRC)/uvm.sv

UVM_VERBOSITY =	UVM_HIGH

VCSI =	vcsi

VCS_DPI = $(UVM_HOME)/src/dpi/uvm_dpi.cc -CFLAGS -DVCS

SIMV = 	./simv +UVM_VERBOSITY=$(UVM_VERBOSITY) -covg_cont_on_error +UVM_SEQUENCE=$@ -l vcs.log |tee $@.txt
SIMVNEG =  ./simv +UVM_VERBOSITY=$(UVM_VERBOSITY) -cg_coverage_control=0 +UVM_SEQUENCE=$@ -l vcs.log |tee $@.txt

##########
run: compile seq ivs

compile:
	$(VCSI) -full64 +incdir+ $(UVM_FILES) $(VCS_DPI) $(INCDIRS) $(DESIGN) $(FILES) -sverilog -timescale=1ns/1ns +acc +vpi +define+SNPS +define+UVM_NO_DEPRECATED $(DEFINE_FLAGS)
	
seq: $(RUN_SEQ)

uvm_%_seq: 

ifeq ($(GUI),1)
	$(SIMV) -gui -run
else
	$(SIMV)
endif

NEG_uvm_%_seq: 

ifeq ($(GUI),1)
	$(SIMVNEG) -gui -run
else
	$(SIMVNEG)
endif
               
clean:
	rm -rf *~ core csrc .simv* vc_hdrs.h ucli.key urg* *.log AN.DB simv  simv.daidir simv.vdb *_ivs.xml *_seq.txt
              	
URG  = urg -dir simv.vdb

CHECK = @$(TEST) \( `grep -c 'UVM_ERROR :    $(N_ERRS)' vcs.log` -eq 1 \) -a \
		 \( `grep -c 'UVM_FATAL :    $(N_FATALS)' vcs.log` -eq 1 \)

ivs:
	./script/ivs.tcl -in simv.vdb
	idsbatch $(PLAN) -result simv_ivs.xml -out "ivs_html ivs_graph" -dir arvreport
