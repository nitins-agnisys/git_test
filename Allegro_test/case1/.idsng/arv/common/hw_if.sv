//Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created by        : 
// generated by      : Admin
// generated from    : C:\Users\Admin\Documents\GitHub\git_test\Allegro_test\case1\case1.idsng
// IDesignSpec rev   : idsbatch v4.16.26.2

//*** This code is generated with following settings ***
// Reg Width                  : 32
// Address Unit               : 8
// C++ Types int              : hwint
// Bus Type                   : AXI
// BigEndian                  : false
// LittleEndian               : false
// Dist. Decode and Readback  : false
//--------------------------------------------------------------------------------------------------------------- 
interface chip_name_hw_if; 

     logic clk;




    //-----------------------------------------------------
    // REGISTER : REG1 SIGNALS
               
                
        logic  block1_idsreg1_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block1_idsreg1_fld_in_enb ;      // FIELD : FLD

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block1_idsreg1_fld_r ;      // FIELD : FLD

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block1_idsreg1_fld_in ;      // FIELD : FLD



    //-----------------------------------------------------
    // REGISTER : REG1 SIGNALS
               
                
        logic  block1_idsreggroup1_reg1_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block1_idsreggroup1_reg1_fld_in_enb ;      // FIELD : FLD

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block1_idsreggroup1_reg1_fld_r ;      // FIELD : FLD

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block1_idsreggroup1_reg1_fld_in ;      // FIELD : FLD


    //-----------------------------------------------------
    // REGISTER : REG2 SIGNALS
               
                
        logic  block1_idsreggroup1_reg2_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block1_idsreggroup1_reg2_fld1_in_enb ;      // FIELD : FLD1

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block1_idsreggroup1_reg2_fld1_r ;      // FIELD : FLD1

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block1_idsreggroup1_reg2_fld1_in ;      // FIELD : FLD1




    //-----------------------------------------------------
    // REGISTER : REG1 SIGNALS
               
                
        logic  block2_idsreggroup1_reg1_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block2_idsreggroup1_reg1_fld_in_enb ;      // FIELD : FLD

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block2_idsreggroup1_reg1_fld_r ;      // FIELD : FLD

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block2_idsreggroup1_reg1_fld_in ;      // FIELD : FLD


    //-----------------------------------------------------
    // REGISTER : REG2 SIGNALS
               
                
        logic  block2_idsreggroup1_reg2_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block2_idsreggroup1_reg2_fld1_in_enb ;      // FIELD : FLD1

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block2_idsreggroup1_reg2_fld1_r ;      // FIELD : FLD1

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block2_idsreggroup1_reg2_fld1_in ;      // FIELD : FLD1



    //-----------------------------------------------------
    // REGISTER : REG1 SIGNALS
               
                
        logic  block2_idsref_name_reg1_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block2_idsref_name_reg1_fld_in_enb ;      // FIELD : FLD

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block2_idsref_name_reg1_fld_r ;      // FIELD : FLD

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block2_idsref_name_reg1_fld_in ;      // FIELD : FLD



    //-----------------------------------------------------
    // REGISTER : REG1 SIGNALS
               
                
        logic  block2_idsref_name_ref_name_reggroup1_reg1_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block2_idsref_name_ref_name_reggroup1_reg1_fld_in_enb ;      // FIELD : FLD

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block2_idsref_name_ref_name_reggroup1_reg1_fld_r ;      // FIELD : FLD

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block2_idsref_name_ref_name_reggroup1_reg1_fld_in ;      // FIELD : FLD


    //-----------------------------------------------------
    // REGISTER : REG2 SIGNALS
               
                
        logic  block2_idsref_name_ref_name_reggroup1_reg2_enb;    // REGISTER ENABLE 

    // HW WRITE-ABLE SIGNAL FOR EACH FIELD 
        logic   block2_idsref_name_ref_name_reggroup1_reg2_fld1_in_enb ;      // FIELD : FLD1

    // READ DATA SIGNAL FOR EACH FIELD 
        logic  [31 : 0] block2_idsref_name_ref_name_reggroup1_reg2_fld1_r ;      // FIELD : FLD1

    // HW WRITE DATA SIGNAL FOR EACH FIELD 
        logic   [31 : 0] block2_idsref_name_ref_name_reggroup1_reg2_fld1_in ;      // FIELD : FLD1


 endinterface 
