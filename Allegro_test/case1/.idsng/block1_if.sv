//Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created by        :
// generated by      : Admin
// generated from    : C:\Users\Admin\Documents\GitHub\git_test\Allegro_test\case1\case1.idsng
// IDesignSpec rev   : idsbatch v4.16.26.2

//*** This code is generated with following settings ***
// Reg Width                  : 32
// Address Unit               : 8
// C++ Types int              : hwint
// Bus Type                   : AXI
// BigEndian                  : false
// LittleEndian               : false
// Dist. Decode and Readback  : false
//---------------------------------------------------------------------------------------------------------------

// INTERFACE : REG1
interface block1_reggroup1_reg1_interface # (
    
    parameter bus_width   = 32,
    parameter addr_width  = 4
    );
    logic reggroup1_reg1_enb;
    logic   reggroup1_reg1_fld_in_enb ;
    
    logic  [31 : 0] reggroup1_reg1_fld_r ;
    logic   [31 : 0] reggroup1_reg1_fld_in ;
    
    modport mp (
    input reggroup1_reg1_fld_in_enb, reggroup1_reg1_fld_in,
    output reggroup1_reg1_enb, reggroup1_reg1_fld_r);
    modport op (
    output reggroup1_reg1_fld_in_enb, reggroup1_reg1_fld_in,
    input reggroup1_reg1_enb, reggroup1_reg1_fld_r);
endinterface

// INTERFACE : REG2
interface block1_reggroup1_reg2_interface # (
    
    parameter bus_width   = 32,
    parameter addr_width  = 4
    );
    logic reggroup1_reg2_enb;
    logic   reggroup1_reg2_fld1_in_enb ;
    
    logic  [31 : 0] reggroup1_reg2_fld1_r ;
    logic   [31 : 0] reggroup1_reg2_fld1_in ;
    
    modport mp (
    input reggroup1_reg2_fld1_in_enb, reggroup1_reg2_fld1_in,
    output reggroup1_reg2_enb, reggroup1_reg2_fld1_r);
    modport op (
    output reggroup1_reg2_fld1_in_enb, reggroup1_reg2_fld1_in,
    input reggroup1_reg2_enb, reggroup1_reg2_fld1_r);
endinterface

// INTERFACE : REG1
interface block1_reg1_interface # (
    
    parameter bus_width   = 32,
    parameter addr_width  = 4
    );
    logic reg1_enb;
    logic   reg1_fld_in_enb ;
    
    logic  [31 : 0] reg1_fld_r ;
    logic   [31 : 0] reg1_fld_in ;
    
    modport mp (
    input reg1_fld_in_enb, reg1_fld_in,
    output reg1_enb, reg1_fld_r);
    modport op (
    output reg1_fld_in_enb, reg1_fld_in,
    input reg1_enb, reg1_fld_r);
endinterface
