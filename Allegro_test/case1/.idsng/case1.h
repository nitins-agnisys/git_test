/*Agnisys, Inc. ***** Copyright 2018 All Rights Reserved. ******/
/**/
/**** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ****/
/* created by        : */
/* generated by      : Admin*/
/* generated from    : C:\Users\Admin\Documents\GitHub\git_test\Allegro_test\case1\case1.idsng*/
/* IDesignSpec rev   : idsbatch v4.16.26.2*/

/**** This code is generated with following settings ****/
/* Reg Width                  : 32*/
/* Address Unit               : 8*/
/* C++ Types int              : hwint*/
/* Bus Type                   : AXI*/
/* BigEndian                  : false*/
/* LittleEndian               : false*/
/* Dist. Decode and Readback  : false*/
/*--------------------------------------------------------------------------------------------------------------- */

/*//////////////////  Chip : chip_name ///////////////////*/

#ifndef _CHIP_NAME_REGS_H_
#define _CHIP_NAME_REGS_H_

/*block : block1 */


typedef union {
    struct {
        hwint fld : 32;           /* 0:31 SW=rw HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} chip_name_block1_reg1;

/*section : reggroup1 */

typedef union {
    struct {
        hwint fld : 32;           /* 0:31 SW=rw HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} chip_name_block1_reggroup1_reg1;

typedef union {
    struct {
        hwint fld1 : 32;           /* 0:31 SW=rw HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} chip_name_block1_reg2;

typedef struct {
    chip_name_block1_reggroup1_reg1  reg1;
    chip_name_block1_reg2  reg2;
    
    
    
} chip_name_block1_reggroup1;


typedef struct {
    chip_name_block1_reg1  reg1;
    
    union {
        chip_name_block1_reggroup1 s;
        hwint8 filler[0x8];
    } reggroup1;
    
    
    
} chip_name_block1_s;


/*block : block2 */


/*section : reggroup1 */

typedef union {
    struct {
        hwint fld : 32;           /* 0:31 SW=rw HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} chip_name_block2_reggroup1_reg1;

typedef union {
    struct {
        hwint fld1 : 32;           /* 0:31 SW=rw HW=rw 0x0 */
    } bf;
    hwint  dw;
    
    
} chip_name_block2_reggroup1_reg2;

typedef struct {
    chip_name_block2_reggroup1_reg1  reg1;
    chip_name_block2_reggroup1_reg2  reg2;
    
    
    
} chip_name_block2_reggroup1;


/*section : ref_name */
/*  REF_NAME DESCRIPTION :,*/

/*section : reggroup1 */

typedef struct {
    
    union {
        chip_name_block2_reggroup1 s;
        hwint8 filler[0x8];
    } reggroup1;
    
    union {
        chip_name_block1_s s;
        hwint8 filler[0xC];
    } ref_name;
    
    
    
} chip_name_block2_s;


/* chip : chip_name */







typedef struct {
    
    union {
        chip_name_block1_s s;
        hwint8 filler[0xC];
    } block1;
    
    
    union {
        chip_name_block2_s s;
        hwint8 filler[0x14];
    } block2;
    
    
} chip_name_s;


#define chip_name_s_SIZE 0x20
#define chip_name_block1_s_SIZE 0xC
#define chip_name_block1_reg1_SIZE 0x4
#define chip_name_block1_reggroup1_SIZE 0x8
#define chip_name_block1_reggroup1_reg1_SIZE 0x4
#define chip_name_block1_reg2_SIZE 0x4
#define chip_name_block2_s_SIZE 0x14
#define chip_name_block2_reggroup1_SIZE 0x8
#define chip_name_block2_reggroup1_reg1_SIZE 0x4
#define chip_name_block2_reggroup1_reg2_SIZE 0x4
#define chip_name_block2_ref_name_SIZE 0xC
#define chip_name_block2_ref_name_ref_name_reg1_SIZE 0x4
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_SIZE 0x8
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg1_SIZE 0x4
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg2_SIZE 0x4

#define chip_name_s_OFFSET 0x0
#define chip_name_block1_s_OFFSET 0x0
#define chip_name_block1_reg1_OFFSET 0x0
#define chip_name_block1_reggroup1_OFFSET 0x4
#define chip_name_block1_reggroup1_reg1_OFFSET 0x0
#define chip_name_block1_reg2_OFFSET 0x4
#define chip_name_block2_s_OFFSET 0xC
#define chip_name_block2_reggroup1_OFFSET 0x0
#define chip_name_block2_reggroup1_reg1_OFFSET 0x0
#define chip_name_block2_reggroup1_reg2_OFFSET 0x4
#define chip_name_block2_ref_name_OFFSET 0x8
#define chip_name_block2_ref_name_ref_name_reg1_OFFSET 0x0
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_OFFSET 0x4
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg1_OFFSET 0x0
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg2_OFFSET 0x4

#define chip_name_s_ADDRESS 0x00
#define chip_name_block1_s_ADDRESS 0x00
#define chip_name_block1_reg1_ADDRESS 0x00
#define chip_name_block1_reggroup1_ADDRESS 0x04
#define chip_name_block1_reggroup1_reg1_ADDRESS 0x04
#define chip_name_block1_reg2_ADDRESS 0x08
#define chip_name_block2_s_ADDRESS 0x0C
#define chip_name_block2_reggroup1_ADDRESS 0x0C
#define chip_name_block2_reggroup1_reg1_ADDRESS 0x0C
#define chip_name_block2_reggroup1_reg2_ADDRESS 0x10
#define chip_name_block2_ref_name_ADDRESS 0x14
#define chip_name_block2_ref_name_ref_name_reg1_ADDRESS 0x14
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_ADDRESS 0x18
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg1_ADDRESS 0x18
#define chip_name_block2_ref_name_ref_name_ref_name_reggroup1_reg2_ADDRESS 0x1C

#define CHIP_NAME_BLOCK1_REG1_FLD_OFFSET 0  /* FLD DESCRIPTION :  */
#define CHIP_NAME_BLOCK1_REG1_FLD_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK1_REGGROUP1_REG1_FLD_OFFSET 0  /* FLD DESCRIPTION :  */
#define CHIP_NAME_BLOCK1_REGGROUP1_REG1_FLD_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK1_REGGROUP1_REG2_FLD1_OFFSET 0  /* FLD1 DESCRIPTION :  */
#define CHIP_NAME_BLOCK1_REGGROUP1_REG2_FLD1_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK2_REGGROUP1_REG1_FLD_OFFSET 0  /* FLD DESCRIPTION :  */
#define CHIP_NAME_BLOCK2_REGGROUP1_REG1_FLD_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK2_REGGROUP1_REG2_FLD1_OFFSET 0  /* FLD1 DESCRIPTION :  */
#define CHIP_NAME_BLOCK2_REGGROUP1_REG2_FLD1_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK2_REF_NAME_REG1_FLD_OFFSET 0  /* FLD DESCRIPTION :  */
#define CHIP_NAME_BLOCK2_REF_NAME_REG1_FLD_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK2_REF_NAME_REGGROUP1_REG1_FLD_OFFSET 0  /* FLD DESCRIPTION :  */
#define CHIP_NAME_BLOCK2_REF_NAME_REGGROUP1_REG1_FLD_MASK 0xFFFFFFFF
#define CHIP_NAME_BLOCK2_REF_NAME_REGGROUP1_REG2_FLD1_OFFSET 0  /* FLD1 DESCRIPTION :  */
#define CHIP_NAME_BLOCK2_REF_NAME_REGGROUP1_REG2_FLD1_MASK 0xFFFFFFFF
#endif /* _CHIP_NAME_REGS_H_ */

/* end */
