//***** Agnisys, Inc.***** Copyright 2018 All Rights Reserved. ***** *****
//
//*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
// created by        : Agni27
// generated by      : Admin
// generated from    : C:\Users\Admin\Documents\GitHub\git_test\Allegro_test\case1\case1.idsng
// IDesignSpec rev   : 4.16.26.2
//--------------------------------------------------------------------------------------------------------------- 

`define CHIP_NAME_ADDR 'h00
`define CHIP_NAME_SIZE 'h20
`define CHIP_NAME_BLOCK1_ADDR 'h00
`define CHIP_NAME_BLOCK1_SIZE 'hC
`define BLOCK1_REG1_ADDR 'h00
`define BLOCK1_REG1_DEFAULT 'h00000000
`define BLOCK1_REG1_FLD_MSB 31
`define BLOCK1_REG1_FLD_LSB 0
`define BLOCK1_REG1_FLD_DEFAULT 'b00000000000000000000000000000000
`define BLOCK1_REGGROUP1_ADDR 'h04
`define BLOCK1_REGGROUP1_SIZE 'h8
`define BLOCK1_REGGROUP1_REPEAT 1
`define BLOCK1_REGGROUP1_REG1_ADDR 'h04
`define BLOCK1_REGGROUP1_REG1_DEFAULT 'h00000000
`define BLOCK1_REGGROUP1_REG1_FLD_MSB 31
`define BLOCK1_REGGROUP1_REG1_FLD_LSB 0
`define BLOCK1_REGGROUP1_REG1_FLD_DEFAULT 'b00000000000000000000000000000000
`define BLOCK1_REGGROUP1_REG2_ADDR 'h08
`define BLOCK1_REGGROUP1_REG2_DEFAULT 'h00000000
`define BLOCK1_REGGROUP1_REG2_FLD1_MSB 31
`define BLOCK1_REGGROUP1_REG2_FLD1_LSB 0
`define BLOCK1_REGGROUP1_REG2_FLD1_DEFAULT 'b00000000000000000000000000000000
`define CHIP_NAME_BLOCK2_ADDR 'h0C
`define CHIP_NAME_BLOCK2_SIZE 'h14
`define BLOCK2_REGGROUP1_ADDR 'h0C
`define BLOCK2_REGGROUP1_SIZE 'h8
`define BLOCK2_REGGROUP1_REPEAT 1
`define BLOCK2_REGGROUP1_REG1_ADDR 'h0C
`define BLOCK2_REGGROUP1_REG1_DEFAULT 'h00000000
`define BLOCK2_REGGROUP1_REG1_FLD_MSB 31
`define BLOCK2_REGGROUP1_REG1_FLD_LSB 0
`define BLOCK2_REGGROUP1_REG1_FLD_DEFAULT 'b00000000000000000000000000000000
`define BLOCK2_REGGROUP1_REG2_ADDR 'h10
`define BLOCK2_REGGROUP1_REG2_DEFAULT 'h00000000
`define BLOCK2_REGGROUP1_REG2_FLD1_MSB 31
`define BLOCK2_REGGROUP1_REG2_FLD1_LSB 0
`define BLOCK2_REGGROUP1_REG2_FLD1_DEFAULT 'b00000000000000000000000000000000
`define BLOCK2_REF_NAME_ADDR 'h14
`define BLOCK2_REF_NAME_SIZE 'hC
`define BLOCK2_REF_NAME_REPEAT 1
`define REF_NAME_REG1_ADDR 'h14
`define REF_NAME_REG1_DEFAULT 'h00000000
`define REF_NAME_REG1_FLD_MSB 31
`define REF_NAME_REG1_FLD_LSB 0
`define REF_NAME_REG1_FLD_DEFAULT 'b00000000000000000000000000000000
`define BLOCK2_REF_NAME_REGGROUP1_ADDR 'h18
`define BLOCK2_REF_NAME_REGGROUP1_SIZE 'h8
`define BLOCK2_REF_NAME_REGGROUP1_REPEAT 1
`define REF_NAME_REGGROUP1_REG1_ADDR 'h18
`define REF_NAME_REGGROUP1_REG1_DEFAULT 'h00000000
`define REF_NAME_REGGROUP1_REG1_FLD_MSB 31
`define REF_NAME_REGGROUP1_REG1_FLD_LSB 0
`define REF_NAME_REGGROUP1_REG1_FLD_DEFAULT 'b00000000000000000000000000000000
`define REF_NAME_REGGROUP1_REG2_ADDR 'h1C
`define REF_NAME_REGGROUP1_REG2_DEFAULT 'h00000000
`define REF_NAME_REGGROUP1_REG2_FLD1_MSB 31
`define REF_NAME_REGGROUP1_REG2_FLD1_LSB 0
`define REF_NAME_REGGROUP1_REG2_FLD1_DEFAULT 'b00000000000000000000000000000000

package chip_name_header_pkg;
/*-------------------------------------------
Reg: BLOCK1/REG1
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld;
} block1_reg1;

/*-------------------------------------------
Reg: REGGROUP1/REG1
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld;
} block1_reggroup1_reg1;

/*-------------------------------------------
Reg: REGGROUP1/REG2
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld1;
} block1_reggroup1_reg2;

/*-------------------------------------------
Reg: REGGROUP1/REG1
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld;
} block2_reggroup1_reg1;

/*-------------------------------------------
Reg: REGGROUP1/REG2
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld1;
} block2_reggroup1_reg2;

/*-------------------------------------------
Reg: REF_NAME/REG1
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld;
} ref_name_reg1;

/*-------------------------------------------
Reg: REGGROUP1/REG1
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld;
} ref_name_reggroup1_reg1;

/*-------------------------------------------
Reg: REGGROUP1/REG2
-------------------------------------------*/

typedef struct packed {
   logic [31:0] fld1;
} ref_name_reggroup1_reg2;

typedef struct packed {
   block1_reggroup1_reg1 reg1;
   block1_reggroup1_reg2 reg2;
} block1_reggroup1;

typedef struct packed {
   block2_reggroup1_reg1 reg1;
   block2_reggroup1_reg2 reg2;
} block2_reggroup1;

typedef struct packed {
   ref_name_reggroup1_reg1 reg1;
   ref_name_reggroup1_reg2 reg2;
} block2_ref_name_reggroup1;

typedef struct packed {
   ref_name_reg1 reg1;
   block2_ref_name_reggroup1 reggroup1;
} block2_ref_name;

typedef struct packed {
   block1_reg1 reg1;
   block1_reggroup1 reggroup1;
} chip_name_block1;

typedef struct packed {
   block2_reggroup1 reggroup1;
   block2_ref_name ref_name;
} chip_name_block2;

typedef struct packed {
    chip_name_block1 block1;
    chip_name_block2 block2;
} chip_name;

endpackage
