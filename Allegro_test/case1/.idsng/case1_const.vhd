-- ***** Agnisys, Inc.***** Copyright 2018 All Rights Reserved. ***** *****
--
--*** This file is auto generated by IDesignSpec (http://www.agnisys.com) . Please do not edit this file. ***
-- created by        : Agni27
-- generated by      : Admin
-- generated from    : C:\Users\Admin\Documents\GitHub\git_test\Allegro_test\case1\case1.idsng
-- IDesignSpec rev   : 4.16.26.2
----------------------------------------------------------------------------------------------------------------- 

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

package block1_header_pkg is

    constant BLOCK1_ADDR : std_logic_vector(4 downto 0) := 5x"00" ;
    constant BLOCK1_SIZE : std_logic_vector := x"c" ;

    constant BLOCK1_REG1_ADDR : std_logic_vector(4 downto 0) := 5x"00" ;
    constant BLOCK1_REG1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK1_REG1_FLD_MSB : integer := 31 ;
    constant BLOCK1_REG1_FLD_LSB : integer := 0 ;
    constant BLOCK1_REG1_FLD_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK1_REGGROUP1_ADDR : std_logic_vector(4 downto 0) := 5x"04" ;
    constant BLOCK1_REGGROUP1_SIZE : std_logic_vector :=  x"8" ;
    constant BLOCK1_REGGROUP1_REPEAT : integer := 1 ;

    constant BLOCK1_REGGROUP1_REG1_ADDR : std_logic_vector(4 downto 0) := 5x"04" ;
    constant BLOCK1_REGGROUP1_REG1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK1_REGGROUP1_REG1_FLD_MSB : integer := 31 ;
    constant BLOCK1_REGGROUP1_REG1_FLD_LSB : integer := 0 ;
    constant BLOCK1_REGGROUP1_REG1_FLD_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK1_REGGROUP1_REG2_ADDR : std_logic_vector(4 downto 0) := 5x"08" ;
    constant BLOCK1_REGGROUP1_REG2_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK1_REGGROUP1_REG2_FLD1_MSB : integer := 31 ;
    constant BLOCK1_REGGROUP1_REG2_FLD1_LSB : integer := 0 ;
    constant BLOCK1_REGGROUP1_REG2_FLD1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;


-------------------------------------------
--Reg: BLOCK1/REG1
-------------------------------------------

type block1_reg1 is record 
    fld : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REGGROUP1/REG1
-------------------------------------------

type block1_reggroup1_reg1 is record 
    fld : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REGGROUP1/REG2
-------------------------------------------

type block1_reggroup1_reg2 is record 
    fld1 : std_logic_vector(31 downto 0);
 end record;

end package;

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;

package block2_header_pkg is

    constant BLOCK2_ADDR : std_logic_vector(4 downto 0) := 5x"0C" ;
    constant BLOCK2_SIZE : std_logic_vector := x"14" ;

    constant BLOCK2_REGGROUP1_ADDR : std_logic_vector(4 downto 0) := 5x"0C" ;
    constant BLOCK2_REGGROUP1_SIZE : std_logic_vector :=  x"8" ;
    constant BLOCK2_REGGROUP1_REPEAT : integer := 1 ;

    constant BLOCK2_REGGROUP1_REG1_ADDR : std_logic_vector(4 downto 0) := 5x"0C" ;
    constant BLOCK2_REGGROUP1_REG1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK2_REGGROUP1_REG1_FLD_MSB : integer := 31 ;
    constant BLOCK2_REGGROUP1_REG1_FLD_LSB : integer := 0 ;
    constant BLOCK2_REGGROUP1_REG1_FLD_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK2_REGGROUP1_REG2_ADDR : std_logic_vector(4 downto 0) := 5x"10" ;
    constant BLOCK2_REGGROUP1_REG2_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK2_REGGROUP1_REG2_FLD1_MSB : integer := 31 ;
    constant BLOCK2_REGGROUP1_REG2_FLD1_LSB : integer := 0 ;
    constant BLOCK2_REGGROUP1_REG2_FLD1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK2_REF_NAME_ADDR : std_logic_vector(4 downto 0) := 5x"14" ;
    constant BLOCK2_REF_NAME_SIZE : std_logic_vector :=  x"C" ;
    constant BLOCK2_REF_NAME_REPEAT : integer := 1 ;

    constant BLOCK2_REF_NAME_REG1_ADDR : std_logic_vector(4 downto 0) := 5x"14" ;
    constant BLOCK2_REF_NAME_REG1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant BLOCK2_REF_NAME_REG1_FLD_MSB : integer := 31 ;
    constant BLOCK2_REF_NAME_REG1_FLD_LSB : integer := 0 ;
    constant BLOCK2_REF_NAME_REG1_FLD_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant REF_NAME_REGGROUP1_ADDR : std_logic_vector(4 downto 0) := 5x"18" ;
    constant REF_NAME_REGGROUP1_SIZE : std_logic_vector :=  x"8" ;
    constant REF_NAME_REGGROUP1_REPEAT : integer := 1 ;

    constant REF_NAME_REGGROUP1_REG1_ADDR : std_logic_vector(4 downto 0) := 5x"18" ;
    constant REF_NAME_REGGROUP1_REG1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant REF_NAME_REGGROUP1_REG1_FLD_MSB : integer := 31 ;
    constant REF_NAME_REGGROUP1_REG1_FLD_LSB : integer := 0 ;
    constant REF_NAME_REGGROUP1_REG1_FLD_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant REF_NAME_REGGROUP1_REG2_ADDR : std_logic_vector(4 downto 0) := 5x"1C" ;
    constant REF_NAME_REGGROUP1_REG2_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;

    constant REF_NAME_REGGROUP1_REG2_FLD1_MSB : integer := 31 ;
    constant REF_NAME_REGGROUP1_REG2_FLD1_LSB : integer := 0 ;
    constant REF_NAME_REGGROUP1_REG2_FLD1_DEFAULT : std_logic_vector(31 downto 0) := 32x"00000000" ;


-------------------------------------------
--Reg: REGGROUP1/REG1
-------------------------------------------

type block2_reggroup1_reg1 is record 
    fld : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REGGROUP1/REG2
-------------------------------------------

type block2_reggroup1_reg2 is record 
    fld1 : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REF_NAME/REG1
-------------------------------------------

type block2_ref_name_reg1 is record 
    fld : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REGGROUP1/REG1
-------------------------------------------

type ref_name_reggroup1_reg1 is record 
    fld : std_logic_vector(31 downto 0);
 end record;

-------------------------------------------
--Reg: REGGROUP1/REG2
-------------------------------------------

type ref_name_reggroup1_reg2 is record 
    fld1 : std_logic_vector(31 downto 0);
 end record;

end package;

